{
	"id": "3ca8345c15dc102a4010591f7a58cb28",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.4",
	"solcLongVersion": "0.5.4+commit.9549d8ff",
	"input": {
		"language": "Solidity",
		"sources": {
			"source/WeenusToken.sol": {
				"content": "/**\r\n *Submitted for verification at Etherscan.io on 2019-03-06\r\n*/\r\n\r\npragma solidity ^0.5.4;\r\n\r\n// ----------------------------------------------------------------------------\r\n// 'WEENUS' 'Weenus ðŸ’ª' token contract with a faucet minting for testing\r\n//\r\n// Send an 0 value transaction with no data to mint 1,000 new tokens\r\n//\r\n// Symbol      : WEENUS\r\n// Name        : Weenus ðŸ’ª\r\n// Total supply: 1,000,000.000000000000000000 + faucet minting\r\n// Decimals    : 18\r\n// Deployed to : Mainnet 0x2823589Ae095D99bD64dEeA80B4690313e2fB519\r\n//\r\n//\r\n// Enjoy.\r\n//\r\n// (c) BokkyPooBah / Bok Consulting Pty Ltd 2019. The MIT Licence.\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Safe maths\r\n// ----------------------------------------------------------------------------\r\nlibrary SafeMath {\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n    function mul(uint a, uint b) internal pure returns (uint c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n    function div(uint a, uint b) internal pure returns (uint c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\r\n// ----------------------------------------------------------------------------\r\ncontract ERC20Interface {\r\n    function totalSupply() public view returns (uint);\r\n    function balanceOf(address tokenOwner) public view returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Contract function to receive approval and execute function in one call\r\n// ----------------------------------------------------------------------------\r\ncontract ApproveAndCallFallBack {\r\n    function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Owned contract\r\n// ----------------------------------------------------------------------------\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC20 Token, with the addition of symbol, name and decimals and a\r\n// fixed supply\r\n// ----------------------------------------------------------------------------\r\ncontract WeenusToken is ERC20Interface, Owned {\r\n    using SafeMath for uint;\r\n\r\n    string public symbol;\r\n    string public  name;\r\n    uint8 public decimals;\r\n    uint _totalSupply;\r\n    uint _drop;\r\n\r\n    mapping(address => uint) balances;\r\n    mapping(address => mapping(address => uint)) allowed;\r\n\r\n    constructor() public {\r\n        symbol = \"WEENUS\";\r\n        name = \"Weenus ðŸ’ª\";\r\n        decimals = 18;\r\n        _totalSupply = 1000000 * 10**uint(decimals);\r\n        _drop = 1000 * 10**uint(decimals);\r\n        balances[owner] = _totalSupply;\r\n        emit Transfer(address(0), owner, _totalSupply);\r\n    }\r\n    function totalSupply() public view returns (uint) {\r\n        return _totalSupply.sub(balances[address(0)]);\r\n    }\r\n    function balanceOf(address tokenOwner) public view returns (uint balance) {\r\n        return balances[tokenOwner];\r\n    }\r\n    function transfer(address to, uint tokens) public returns (bool success) {\r\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\r\n        balances[to] = balances[to].add(tokens);\r\n        emit Transfer(msg.sender, to, tokens);\r\n        return true;\r\n    }\r\n    function approve(address spender, uint tokens) public returns (bool success) {\r\n        allowed[msg.sender][spender] = tokens;\r\n        emit Approval(msg.sender, spender, tokens);\r\n        return true;\r\n    }\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\r\n        balances[from] = balances[from].sub(tokens);\r\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\r\n        balances[to] = balances[to].add(tokens);\r\n        emit Transfer(from, to, tokens);\r\n        return true;\r\n    }\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r\n        return allowed[tokenOwner][spender];\r\n    }\r\n    function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\r\n        allowed[msg.sender][spender] = tokens;\r\n        emit Approval(msg.sender, spender, tokens);\r\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\r\n        return true;\r\n    }\r\n    function mint(address tokenOwner, uint tokens) internal returns (bool success) {\r\n        balances[tokenOwner] = balances[tokenOwner].add(tokens);\r\n        _totalSupply = _totalSupply.add(tokens);\r\n        emit Transfer(address(0), tokenOwner, tokens);\r\n        return true;\r\n    }\r\n    function drip() public {\r\n        mint(msg.sender, _drop);\r\n    }\r\n\r\n    function () external payable {\r\n        mint(msg.sender, _drop);\r\n        if (msg.value > 0) {\r\n            msg.sender.transfer(msg.value);\r\n        }\r\n    }\r\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\r\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 99999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"source/WeenusToken.sol": {
				"ApproveAndCallFallBack": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "tokens",
									"type": "uint256"
								},
								{
									"name": "token",
									"type": "address"
								},
								{
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "receiveApproval",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"receiveApproval(address,uint256,address,bytes)": "8f4ffcb1"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"ERC20Interface": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "tokenOwner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"Owned": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "newOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"source/WeenusToken.sol\":2933:3552  contract Owned {\r... */\n  mstore(0x40, 0x80)\n    /* \"source/WeenusToken.sol\":3093:3151  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"source/WeenusToken.sol\":3125:3130  owner */\n  0x00\n    /* \"source/WeenusToken.sol\":3125:3143  owner = msg.sender */\n  dup1\n  sload\n  not(sub(exp(0x02, 0xa0), 0x01))\n  and\n    /* \"source/WeenusToken.sol\":3133:3143  msg.sender */\n  caller\n    /* \"source/WeenusToken.sol\":3125:3143  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"source/WeenusToken.sol\":2933:3552  contract Owned {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/WeenusToken.sol\":2933:3552  contract Owned {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"source/WeenusToken.sol\":2933:3552  contract Owned {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      div(calldataload(0x00), 0x0100000000000000000000000000000000000000000000000000000000)\n      0x79ba5097\n      dup2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xd4ee1d90\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"source/WeenusToken.sol\":3353:3549  function acceptOwnership() public {\r... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"source/WeenusToken.sol\":2955:2975  address public owner */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"source/WeenusToken.sol\":2982:3005  address public newOwner */\n    tag_5:\n      tag_9\n      tag_12\n      jump\t// in\n        /* \"source/WeenusToken.sol\":3245:3347  function transferOwnership(address _newOwner) public onlyOwner {\r... */\n    tag_6:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_14:\n      pop\n        /* \"source/WeenusToken.sol\":3245:3347  function transferOwnership(address _newOwner) public onlyOwner {\r... */\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_15\n      jump\t// in\n        /* \"source/WeenusToken.sol\":3353:3549  function acceptOwnership() public {\r... */\n    tag_8:\n        /* \"source/WeenusToken.sol\":3420:3428  newOwner */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x01))\n        /* \"source/WeenusToken.sol\":3406:3416  msg.sender */\n      caller\n        /* \"source/WeenusToken.sol\":3406:3428  msg.sender == newOwner */\n      eq\n        /* \"source/WeenusToken.sol\":3398:3429  require(msg.sender == newOwner) */\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n        /* \"source/WeenusToken.sol\":3473:3481  newOwner */\n      sload(0x01)\n      0x00\n        /* \"source/WeenusToken.sol\":3466:3471  owner */\n      dup1\n      sload\n        /* \"source/WeenusToken.sol\":3445:3482  OwnershipTransferred(owner, newOwner) */\n      mload(0x40)\n        /* \"source/WeenusToken.sol\":3473:3481  newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap4\n      dup5\n      and\n      swap4\n        /* \"source/WeenusToken.sol\":3466:3471  owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"source/WeenusToken.sol\":3445:3482  OwnershipTransferred(owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"source/WeenusToken.sol\":3501:3509  newOwner */\n      0x01\n      dup1\n      sload\n      0x00\n        /* \"source/WeenusToken.sol\":3493:3509  owner = newOwner */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      swap1\n      dup2\n      and\n        /* \"source/WeenusToken.sol\":3501:3509  newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"source/WeenusToken.sol\":3493:3509  owner = newOwner */\n      or\n      swap1\n      swap2\n      sstore\n        /* \"source/WeenusToken.sol\":3520:3541  newOwner = address(0) */\n      and\n      swap1\n      sstore\n        /* \"source/WeenusToken.sol\":3353:3549  function acceptOwnership() public {\r... */\n      jump\t// out\n        /* \"source/WeenusToken.sol\":2955:2975  address public owner */\n    tag_10:\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x00))\n      dup2\n      jump\t// out\n        /* \"source/WeenusToken.sol\":2982:3005  address public newOwner */\n    tag_12:\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x01))\n      dup2\n      jump\t// out\n        /* \"source/WeenusToken.sol\":3245:3347  function transferOwnership(address _newOwner) public onlyOwner {\r... */\n    tag_15:\n        /* \"source/WeenusToken.sol\":3211:3216  owner */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x00))\n        /* \"source/WeenusToken.sol\":3197:3207  msg.sender */\n      caller\n        /* \"source/WeenusToken.sol\":3197:3216  msg.sender == owner */\n      eq\n        /* \"source/WeenusToken.sol\":3189:3217  require(msg.sender == owner) */\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n        /* \"source/WeenusToken.sol\":3319:3327  newOwner */\n      0x01\n        /* \"source/WeenusToken.sol\":3319:3339  newOwner = _newOwner */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"source/WeenusToken.sol\":3245:3347  function transferOwnership(address _newOwner) public onlyOwner {\r... */\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058203aa57dcd601145d1e3eb4894d2473c6ca986a91a68820e3faf4d3262b9cc90a80029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060008054600160a060020a0319163317905561026c806100326000396000f3fe608060405234801561001057600080fd5b5060043610610068577c0100000000000000000000000000000000000000000000000000000000600035046379ba5097811461006d5780638da5cb5b14610077578063d4ee1d90146100a8578063f2fde38b146100b0575b600080fd5b6100756100e3565b005b61007f61019d565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61007f6101b9565b610075600480360360208110156100c657600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166101d5565b60015473ffffffffffffffffffffffffffffffffffffffff16331461010757600080fd5b6001546000805460405173ffffffffffffffffffffffffffffffffffffffff93841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff841617909155169055565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101f957600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905556fea165627a7a723058203aa57dcd601145d1e3eb4894d2473c6ca986a91a68820e3faf4d3262b9cc90a80029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x26C DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x68 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x79BA5097 DUP2 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH2 0xE3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7F PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0x1B9 JUMP JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 GASPRICE 0xa5 PUSH30 0xCD601145D1E3EB4894D2473C6CA986A91A68820E3FAF4D3262B9CC90A800 0x29 ",
							"sourceMap": "2933:619:0:-;;;3093:58;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3125:5:0;:18;;-1:-1:-1;;;;;;3125:18:0;3133:10;3125:18;;;2933:619;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060043610610068577c0100000000000000000000000000000000000000000000000000000000600035046379ba5097811461006d5780638da5cb5b14610077578063d4ee1d90146100a8578063f2fde38b146100b0575b600080fd5b6100756100e3565b005b61007f61019d565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61007f6101b9565b610075600480360360208110156100c657600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166101d5565b60015473ffffffffffffffffffffffffffffffffffffffff16331461010757600080fd5b6001546000805460405173ffffffffffffffffffffffffffffffffffffffff93841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff841617909155169055565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101f957600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905556fea165627a7a723058203aa57dcd601145d1e3eb4894d2473c6ca986a91a68820e3faf4d3262b9cc90a80029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x68 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x79BA5097 DUP2 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH2 0xE3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7F PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0x1B9 JUMP JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 GASPRICE 0xa5 PUSH30 0xCD601145D1E3EB4894D2473C6CA986A91A68820E3FAF4D3262B9CC90A800 0x29 ",
							"sourceMap": "2933:619:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2933:619:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3353:196;;;:::i;:::-;;2955:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2982:23;;;:::i;3245:102::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3245:102:0;;;;:::i;3353:196::-;3420:8;;;;3406:10;:22;3398:31;;;;;;3473:8;;;3466:5;;3445:37;;3473:8;;;;;3466:5;;;;3445:37;;;3501:8;;;;3493:16;;;;;;3501:8;;;3493:16;;;;3520:21;;;3353:196::o;2955:20::-;;;;;;:::o;2982:23::-;;;;;;:::o;3245:102::-;3211:5;;;;3197:10;:19;3189:28;;;;;;3319:8;:20;;;;;;;;;;;;;;;3245:102::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "124000",
								"executionCost": "20463",
								"totalCost": "144463"
							},
							"external": {
								"acceptOwnership()": "42748",
								"newOwner()": "437",
								"owner()": "415",
								"transferOwnership(address)": "20708"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2933,
									"end": 3552,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 2933,
									"end": 3552,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2933,
									"end": 3552,
									"name": "MSTORE"
								},
								{
									"begin": 3093,
									"end": 3151,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 3125,
									"end": 3130,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3125,
									"end": 3143,
									"name": "DUP1"
								},
								{
									"begin": 3125,
									"end": 3143,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 3125,
									"end": 3143,
									"name": "AND"
								},
								{
									"begin": 3133,
									"end": 3143,
									"name": "CALLER"
								},
								{
									"begin": 3125,
									"end": 3143,
									"name": "OR"
								},
								{
									"begin": 3125,
									"end": 3143,
									"name": "SWAP1"
								},
								{
									"begin": 3125,
									"end": 3143,
									"name": "SSTORE"
								},
								{
									"begin": 2933,
									"end": 3552,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2933,
									"end": 3552,
									"name": "DUP1"
								},
								{
									"begin": 2933,
									"end": 3552,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2933,
									"end": 3552,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2933,
									"end": 3552,
									"name": "CODECOPY"
								},
								{
									"begin": 2933,
									"end": 3552,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2933,
									"end": 3552,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058203aa57dcd601145d1e3eb4894d2473c6ca986a91a68820e3faf4d3262b9cc90a80029",
									".code": [
										{
											"begin": 2933,
											"end": 3552,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "MSTORE"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "POP"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "LT"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "JUMPI"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "DIV"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "PUSH",
											"value": "79BA5097"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "DUP2"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "EQ"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "JUMPI"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "DUP1"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "EQ"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "JUMPI"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "DUP1"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "PUSH",
											"value": "D4EE1D90"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "EQ"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "JUMPI"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "DUP1"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "EQ"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "JUMPI"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "JUMPDEST"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "DUP1"
										},
										{
											"begin": 2933,
											"end": 3552,
											"name": "REVERT"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "JUMPDEST"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "JUMPDEST"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "STOP"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "JUMPDEST"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "JUMPDEST"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "DUP1"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "MLOAD"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "SWAP1"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "SWAP3"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "AND"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "DUP3"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "MSTORE"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "MLOAD"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "SWAP1"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "DUP2"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "SWAP1"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "SUB"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "ADD"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "SWAP1"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "RETURN"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "JUMPDEST"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "JUMPDEST"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "DUP1"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "AND"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "JUMPDEST"
										},
										{
											"begin": 3420,
											"end": 3428,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3420,
											"end": 3428,
											"name": "SLOAD"
										},
										{
											"begin": 3420,
											"end": 3428,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3420,
											"end": 3428,
											"name": "AND"
										},
										{
											"begin": 3406,
											"end": 3416,
											"name": "CALLER"
										},
										{
											"begin": 3406,
											"end": 3428,
											"name": "EQ"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "JUMPI"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "DUP1"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "REVERT"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "JUMPDEST"
										},
										{
											"begin": 3473,
											"end": 3481,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3473,
											"end": 3481,
											"name": "SLOAD"
										},
										{
											"begin": 3473,
											"end": 3481,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "DUP1"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "SLOAD"
										},
										{
											"begin": 3445,
											"end": 3482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3482,
											"name": "MLOAD"
										},
										{
											"begin": 3473,
											"end": 3481,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3473,
											"end": 3481,
											"name": "SWAP4"
										},
										{
											"begin": 3473,
											"end": 3481,
											"name": "DUP5"
										},
										{
											"begin": 3473,
											"end": 3481,
											"name": "AND"
										},
										{
											"begin": 3473,
											"end": 3481,
											"name": "SWAP4"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "SWAP1"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "SWAP2"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "AND"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "SWAP2"
										},
										{
											"begin": 3445,
											"end": 3482,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3445,
											"end": 3482,
											"name": "SWAP2"
										},
										{
											"begin": 3445,
											"end": 3482,
											"name": "LOG3"
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "DUP1"
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "SLOAD"
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "DUP1"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "SLOAD"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "SWAP1"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "DUP2"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "AND"
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "DUP5"
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "AND"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "OR"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "SWAP1"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "SWAP2"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "SSTORE"
										},
										{
											"begin": 3520,
											"end": 3541,
											"name": "AND"
										},
										{
											"begin": 3520,
											"end": 3541,
											"name": "SWAP1"
										},
										{
											"begin": 3520,
											"end": 3541,
											"name": "SSTORE"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "JUMPDEST"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "SLOAD"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "AND"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "DUP2"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "JUMPDEST"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "SLOAD"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "AND"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "DUP2"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "JUMPDEST"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "SLOAD"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "AND"
										},
										{
											"begin": 3197,
											"end": 3207,
											"name": "CALLER"
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "EQ"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "JUMPI"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "DUP1"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "REVERT"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "JUMPDEST"
										},
										{
											"begin": 3319,
											"end": 3327,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "DUP1"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SLOAD"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "AND"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SWAP3"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SWAP1"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SWAP3"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "AND"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SWAP2"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SWAP1"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SWAP2"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "OR"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SWAP1"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SSTORE"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"newOwner()": "d4ee1d90",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"source/WeenusToken.sol\":\"Owned\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/WeenusToken.sol\":{\"keccak256\":\"0x153aeb34a4c211a69dddaa7290da788297be4e2b43517d33d5539c4516c7863c\",\"urls\":[\"bzzr://536b5969afd57163756b828dce4a50e22e6acda5b588a41335029c13c2a65965\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"source/WeenusToken.sol\":895:1409  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x00\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x00\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x00\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/WeenusToken.sol\":895:1409  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820012adf1ad26cb611b4b6666dc02906a83fbde680ce70d224c4172c9c6f10b4660029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820012adf1ad26cb611b4b6666dc02906a83fbde680ce70d224c4172c9c6f10b4660029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 ADD 0x2a 0xdf BYTE 0xd2 PUSH13 0xB611B4B6666DC02906A83FBDE6 DUP1 0xce PUSH17 0xD224C4172C9C6F10B46600290000000000 ",
							"sourceMap": "895:514:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820012adf1ad26cb611b4b6666dc02906a83fbde680ce70d224c4172c9c6f10b4660029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 ADD 0x2a 0xdf BYTE 0xd2 PUSH13 0xB611B4B6666DC02906A83FBDE6 DUP1 0xce PUSH17 0xD224C4172C9C6F10B46600290000000000 ",
							"sourceMap": "895:514:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 895,
									"end": 1409,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 895,
									"end": 1409,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820012adf1ad26cb611b4b6666dc02906a83fbde680ce70d224c4172c9c6f10b4660029",
									".code": [
										{
											"begin": 895,
											"end": 1409,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 895,
											"end": 1409,
											"name": "ADDRESS"
										},
										{
											"begin": 895,
											"end": 1409,
											"name": "EQ"
										},
										{
											"begin": 895,
											"end": 1409,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 895,
											"end": 1409,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 895,
											"end": 1409,
											"name": "MSTORE"
										},
										{
											"begin": 895,
											"end": 1409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 895,
											"end": 1409,
											"name": "DUP1"
										},
										{
											"begin": 895,
											"end": 1409,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"source/WeenusToken.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/WeenusToken.sol\":{\"keccak256\":\"0x153aeb34a4c211a69dddaa7290da788297be4e2b43517d33d5539c4516c7863c\",\"urls\":[\"bzzr://536b5969afd57163756b828dce4a50e22e6acda5b588a41335029c13c2a65965\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"WeenusToken": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "tokenOwner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "drip",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "tokens",
									"type": "uint256"
								},
								{
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "newOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transferAnyERC20Token",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"source/WeenusToken.sol\":3807:6715  contract WeenusToken is ERC20Interface, Owned {\r... */\n  mstore(0x40, 0x80)\n    /* \"source/WeenusToken.sol\":4117:4425  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"source/WeenusToken.sol\":3125:3130  owner */\n  0x00\n    /* \"source/WeenusToken.sol\":3125:3143  owner = msg.sender */\n  dup1\n  sload\n  not(sub(exp(0x02, 0xa0), 0x01))\n  and\n    /* \"source/WeenusToken.sol\":3133:3143  msg.sender */\n  caller\n    /* \"source/WeenusToken.sol\":3125:3143  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"source/WeenusToken.sol\":4149:4166  symbol = \"WEENUS\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x06\n  dup1\n  dup3\n  mstore\n  0x5745454e55530000000000000000000000000000000000000000000000000000\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_6\n  swap2\n    /* \"source/WeenusToken.sol\":4149:4155  symbol */\n  0x02\n  swap2\n    /* \"source/WeenusToken.sol\":4149:4166  symbol = \"WEENUS\" */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"source/WeenusToken.sol\":4177:4197  name = \"Weenus ðŸ’ª\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x0b\n  dup1\n  dup3\n  mstore\n  0x5765656e757320f09f92aa000000000000000000000000000000000000000000\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_8\n  swap2\n    /* \"source/WeenusToken.sol\":4177:4181  name */\n  0x03\n  swap2\n    /* \"source/WeenusToken.sol\":4177:4197  name = \"Weenus ðŸ’ª\" */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"source/WeenusToken.sol\":4208:4216  decimals */\n  0x04\n    /* \"source/WeenusToken.sol\":4208:4221  decimals = 18 */\n  dup1\n  sload\n    /* \"source/WeenusToken.sol\":4219:4221  18 */\n  0x12\n  not(0xff)\n    /* \"source/WeenusToken.sol\":4208:4221  decimals = 18 */\n  swap1\n  swap2\n  and\n  or\n  swap1\n  dup2\n  swap1\n  sstore\n  0xff\n    /* \"source/WeenusToken.sol\":4266:4274  decimals */\n  and\n    /* \"source/WeenusToken.sol\":4257:4259  10 */\n  0x0a\n    /* \"source/WeenusToken.sol\":4257:4275  10**uint(decimals) */\n  exp\n    /* \"source/WeenusToken.sol\":4247:4254  1000000 */\n  0x0f4240\n    /* \"source/WeenusToken.sol\":4247:4275  1000000 * 10**uint(decimals) */\n  dup2\n  mul\n    /* \"source/WeenusToken.sol\":4232:4244  _totalSupply */\n  0x05\n    /* \"source/WeenusToken.sol\":4232:4275  _totalSupply = 1000000 * 10**uint(decimals) */\n  dup2\n  swap1\n  sstore\n    /* \"source/WeenusToken.sol\":4294:4298  1000 */\n  0x03e8\n    /* \"source/WeenusToken.sol\":4294:4319  1000 * 10**uint(decimals) */\n  swap1\n  swap2\n  mul\n    /* \"source/WeenusToken.sol\":4286:4291  _drop */\n  0x06\n    /* \"source/WeenusToken.sol\":4286:4319  _drop = 1000 * 10**uint(decimals) */\n  sstore\n  0x00\n    /* \"source/WeenusToken.sol\":4339:4344  owner */\n  dup1\n  sload\n  sub(exp(0x02, 0xa0), 0x01)\n  swap1\n  dup2\n  and\n    /* \"source/WeenusToken.sol\":4330:4345  balances[owner] */\n  dup3\n  mstore\n    /* \"source/WeenusToken.sol\":4330:4338  balances */\n  0x07\n    /* \"source/WeenusToken.sol\":4330:4345  balances[owner] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup5\n  keccak256\n    /* \"source/WeenusToken.sol\":4330:4360  balances[owner] = _totalSupply */\n  dup6\n  swap1\n  sstore\n    /* \"source/WeenusToken.sol\":4397:4402  owner */\n  dup4\n  sload\n    /* \"source/WeenusToken.sol\":4376:4417  Transfer(address(0), owner, _totalSupply) */\n  dup2\n  mload\n  swap6\n  dup7\n  mstore\n  swap1\n  mload\n    /* \"source/WeenusToken.sol\":4397:4402  owner */\n  swap3\n  and\n  swap4\n    /* \"source/WeenusToken.sol\":4376:4417  Transfer(address(0), owner, _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap3\n  swap1\n  dup2\n  swap1\n  sub\n  swap1\n  swap2\n  add\n  swap1\n  log3\n    /* \"source/WeenusToken.sol\":3807:6715  contract WeenusToken is ERC20Interface, Owned {\r... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_11\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_13)\ntag_11:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_13\n  jumpi\n  swap2\n  dup3\n  add\ntag_12:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_12)\ntag_13:\n  pop\n  tag_14\n  swap3\n  swap2\n  pop\n  tag_15\n  jump\t// in\ntag_14:\n  pop\n  swap1\n  jump\t// out\ntag_15:\n  tag_16\n  swap2\n  swap1\ntag_17:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_14\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_17)\ntag_16:\n  swap1\n  jump\t// out\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/WeenusToken.sol\":3807:6715  contract WeenusToken is ERC20Interface, Owned {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      calldataload(0x00)\n      0x0100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      dup1\n      0x95d89b41\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xd4ee1d90\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xd4ee1d90\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdc39d06d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9f678cca\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xcae9ca51\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x313ce567\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n    tag_1:\n        /* \"source/WeenusToken.sol\":6405:6428  mint(msg.sender, _drop) */\n      tag_23\n        /* \"source/WeenusToken.sol\":6410:6420  msg.sender */\n      caller\n        /* \"source/WeenusToken.sol\":6422:6427  _drop */\n      sload(0x06)\n        /* \"source/WeenusToken.sol\":6405:6409  mint */\n      tag_24\n        /* \"source/WeenusToken.sol\":6405:6428  mint(msg.sender, _drop) */\n      jump\t// in\n    tag_23:\n      pop\n        /* \"source/WeenusToken.sol\":6455:6456  0 */\n      0x00\n        /* \"source/WeenusToken.sol\":6443:6452  msg.value */\n      callvalue\n        /* \"source/WeenusToken.sol\":6443:6456  msg.value > 0 */\n      gt\n        /* \"source/WeenusToken.sol\":6439:6515  if (msg.value > 0) {\r... */\n      iszero\n      tag_25\n      jumpi\n        /* \"source/WeenusToken.sol\":6473:6503  msg.sender.transfer(msg.value) */\n      mload(0x40)\n        /* \"source/WeenusToken.sol\":6473:6483  msg.sender */\n      caller\n      swap1\n        /* \"source/WeenusToken.sol\":6493:6502  msg.value */\n      callvalue\n        /* \"source/WeenusToken.sol\":6473:6503  msg.sender.transfer(msg.value) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"source/WeenusToken.sol\":6493:6502  msg.value */\n      dup6\n        /* \"source/WeenusToken.sol\":6473:6483  msg.sender */\n      dup9\n        /* \"source/WeenusToken.sol\":6473:6503  msg.sender.transfer(msg.value) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_26:\n        /* \"source/WeenusToken.sol\":6473:6503  msg.sender.transfer(msg.value) */\n      pop\n        /* \"source/WeenusToken.sol\":6439:6515  if (msg.value > 0) {\r... */\n    tag_25:\n        /* \"source/WeenusToken.sol\":3807:6715  contract WeenusToken is ERC20Interface, Owned {\r... */\n      stop\n        /* \"source/WeenusToken.sol\":3919:3938  string public  name */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n        /* \"source/WeenusToken.sol\":3919:3938  string public  name */\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_30:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_30)\n    tag_31:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"source/WeenusToken.sol\":3919:3938  string public  name */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_33\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_33:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"source/WeenusToken.sol\":4950:5158  function approve(address spender, uint tokens) public returns (bool success) {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"source/WeenusToken.sol\":4950:5158  function approve(address spender, uint tokens) public returns (bool success) {\r... */\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_36:\n      pop\n        /* \"source/WeenusToken.sol\":4950:5158  function approve(address spender, uint tokens) public returns (bool success) {\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_37\n      jump\t// in\n    tag_35:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"source/WeenusToken.sol\":4431:4545  function totalSupply() public view returns (uint) {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_38:\n        /* \"source/WeenusToken.sol\":4431:4545  function totalSupply() public view returns (uint) {\r... */\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"source/WeenusToken.sol\":5164:5507  function transferFrom(address from, address to, uint tokens) public returns (bool success) {\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_41:\n        /* \"source/WeenusToken.sol\":5164:5507  function transferFrom(address from, address to, uint tokens) public returns (bool success) {\r... */\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_43:\n      pop\n        /* \"source/WeenusToken.sol\":5164:5507  function transferFrom(address from, address to, uint tokens) public returns (bool success) {\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_44\n      jump\t// in\n        /* \"source/WeenusToken.sol\":3945:3966  uint8 public decimals */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_45:\n        /* \"source/WeenusToken.sol\":3945:3966  uint8 public decimals */\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"source/WeenusToken.sol\":4551:4671  function balanceOf(address tokenOwner) public view returns (uint balance) {\r... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_48:\n        /* \"source/WeenusToken.sol\":4551:4671  function balanceOf(address tokenOwner) public view returns (uint balance) {\r... */\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_50:\n      pop\n        /* \"source/WeenusToken.sol\":4551:4671  function balanceOf(address tokenOwner) public view returns (uint balance) {\r... */\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_51\n      jump\t// in\n        /* \"source/WeenusToken.sol\":3353:3549  function acceptOwnership() public {\r... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_52:\n        /* \"source/WeenusToken.sol\":3353:3549  function acceptOwnership() public {\r... */\n      pop\n      tag_25\n      tag_54\n      jump\t// in\n        /* \"source/WeenusToken.sol\":2955:2975  address public owner */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_55:\n        /* \"source/WeenusToken.sol\":2955:2975  address public owner */\n      pop\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"source/WeenusToken.sol\":3892:3912  string public symbol */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_58:\n        /* \"source/WeenusToken.sol\":3892:3912  string public symbol */\n      pop\n      tag_28\n      tag_60\n      jump\t// in\n        /* \"source/WeenusToken.sol\":6292:6357  function drip() public {\r... */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_65:\n        /* \"source/WeenusToken.sol\":6292:6357  function drip() public {\r... */\n      pop\n      tag_25\n      tag_67\n      jump\t// in\n        /* \"source/WeenusToken.sol\":4677:4944  function transfer(address to, uint tokens) public returns (bool success) {\r... */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_68:\n        /* \"source/WeenusToken.sol\":4677:4944  function transfer(address to, uint tokens) public returns (bool success) {\r... */\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_70\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_70:\n      pop\n        /* \"source/WeenusToken.sol\":4677:4944  function transfer(address to, uint tokens) public returns (bool success) {\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_71\n      jump\t// in\n        /* \"source/WeenusToken.sol\":5666:5999  function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\r... */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_72:\n        /* \"source/WeenusToken.sol\":5666:5999  function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\r... */\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_74:\n        /* \"source/WeenusToken.sol\":5666:5999  function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      calldataload\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap2\n      dup2\n      add\n      swap1\n      0x60\n      dup2\n      add\n      0x40\n      dup3\n      add\n      calldataload\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":5:33   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_75\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_75:\n        /* \"source/WeenusToken.sol\":5666:5999  function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\r... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_76\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_76:\n        /* \"source/WeenusToken.sol\":5666:5999  function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\r... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_77:\n        /* \"source/WeenusToken.sol\":5666:5999  function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\r... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":81:97   */\n      swap3\n      add\n        /* \"--CODEGEN--\":74:101   */\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"source/WeenusToken.sol\":5666:5999  function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\r... */\n      swap3\n      swap6\n      pop\n      tag_78\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"source/WeenusToken.sol\":2982:3005  address public newOwner */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_79\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_79:\n        /* \"source/WeenusToken.sol\":2982:3005  address public newOwner */\n      pop\n      tag_56\n      tag_81\n      jump\t// in\n        /* \"source/WeenusToken.sol\":6528:6712  function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\r... */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_82\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_82:\n        /* \"source/WeenusToken.sol\":6528:6712  function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\r... */\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_84:\n      pop\n        /* \"source/WeenusToken.sol\":6528:6712  function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_85\n      jump\t// in\n        /* \"source/WeenusToken.sol\":5513:5660  function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r... */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_86\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_86:\n        /* \"source/WeenusToken.sol\":5513:5660  function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r... */\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_88\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_88:\n      pop\n        /* \"source/WeenusToken.sol\":5513:5660  function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_89\n      jump\t// in\n        /* \"source/WeenusToken.sol\":3245:3347  function transferOwnership(address _newOwner) public onlyOwner {\r... */\n    tag_17:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_90:\n        /* \"source/WeenusToken.sol\":3245:3347  function transferOwnership(address _newOwner) public onlyOwner {\r... */\n      pop\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_92\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_92:\n      pop\n        /* \"source/WeenusToken.sol\":3245:3347  function transferOwnership(address _newOwner) public onlyOwner {\r... */\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_93\n      jump\t// in\n        /* \"source/WeenusToken.sol\":6005:6286  function mint(address tokenOwner, uint tokens) internal returns (bool success) {\r... */\n    tag_24:\n        /* \"source/WeenusToken.sol\":6118:6138  balances[tokenOwner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"source/WeenusToken.sol\":6070:6082  bool success */\n      0x00\n        /* \"source/WeenusToken.sol\":6118:6138  balances[tokenOwner] */\n      swap1\n      dup2\n      mstore\n        /* \"source/WeenusToken.sol\":6118:6126  balances */\n      0x07\n        /* \"source/WeenusToken.sol\":6118:6138  balances[tokenOwner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"source/WeenusToken.sol\":6118:6150  balances[tokenOwner].add(tokens) */\n      tag_95\n      swap1\n        /* \"source/WeenusToken.sol\":6143:6149  tokens */\n      dup4\n        /* \"source/WeenusToken.sol\":6118:6150  balances[tokenOwner].add(tokens) */\n      0xffffffff\n        /* \"source/WeenusToken.sol\":6118:6142  balances[tokenOwner].add */\n      tag_96\n        /* \"source/WeenusToken.sol\":6118:6150  balances[tokenOwner].add(tokens) */\n      and\n      jump\t// in\n    tag_95:\n        /* \"source/WeenusToken.sol\":6095:6115  balances[tokenOwner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/WeenusToken.sol\":6095:6103  balances */\n      0x07\n        /* \"source/WeenusToken.sol\":6095:6115  balances[tokenOwner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/WeenusToken.sol\":6095:6150  balances[tokenOwner] = balances[tokenOwner].add(tokens) */\n      sstore\n        /* \"source/WeenusToken.sol\":6176:6188  _totalSupply */\n      sload(0x05)\n        /* \"source/WeenusToken.sol\":6176:6200  _totalSupply.add(tokens) */\n      tag_97\n      swap1\n        /* \"source/WeenusToken.sol\":6193:6199  tokens */\n      dup4\n        /* \"source/WeenusToken.sol\":6176:6200  _totalSupply.add(tokens) */\n      0xffffffff\n        /* \"source/WeenusToken.sol\":6176:6192  _totalSupply.add */\n      tag_96\n        /* \"source/WeenusToken.sol\":6176:6200  _totalSupply.add(tokens) */\n      and\n      jump\t// in\n    tag_97:\n        /* \"source/WeenusToken.sol\":6161:6173  _totalSupply */\n      0x05\n        /* \"source/WeenusToken.sol\":6161:6200  _totalSupply = _totalSupply.add(tokens) */\n      sstore\n        /* \"source/WeenusToken.sol\":6216:6256  Transfer(address(0), tokenOwner, tokens) */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      swap1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap2\n        /* \"source/WeenusToken.sol\":6233:6234  0 */\n      0x00\n      swap2\n        /* \"source/WeenusToken.sol\":6216:6256  Transfer(address(0), tokenOwner, tokens) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n      pop\n        /* \"source/WeenusToken.sol\":6274:6278  true */\n      0x01\n        /* \"source/WeenusToken.sol\":6005:6286  function mint(address tokenOwner, uint tokens) internal returns (bool success) {\r... */\n    tag_94:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/WeenusToken.sol\":3919:3938  string public  name */\n    tag_29:\n      0x03\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x02\n      0x01\n      dup6\n      and\n      iszero\n      0x0100\n      mul\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_98\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_99\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_98)\n    tag_99:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_100:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_100\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"source/WeenusToken.sol\":4950:5158  function approve(address spender, uint tokens) public returns (bool success) {\r... */\n    tag_37:\n        /* \"source/WeenusToken.sol\":5046:5056  msg.sender */\n      caller\n        /* \"source/WeenusToken.sol\":5013:5025  bool success */\n      0x00\n        /* \"source/WeenusToken.sol\":5038:5057  allowed[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"source/WeenusToken.sol\":5038:5045  allowed */\n      0x08\n        /* \"source/WeenusToken.sol\":5038:5057  allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"source/WeenusToken.sol\":5038:5066  allowed[msg.sender][spender] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"source/WeenusToken.sol\":5038:5075  allowed[msg.sender][spender] = tokens */\n      dup7\n      swap1\n      sstore\n        /* \"source/WeenusToken.sol\":5091:5128  Approval(msg.sender, spender, tokens) */\n      dup2\n      mload\n      dup7\n      dup2\n      mstore\n      swap2\n      mload\n        /* \"source/WeenusToken.sol\":5013:5025  bool success */\n      swap4\n      swap5\n        /* \"source/WeenusToken.sol\":5038:5066  allowed[msg.sender][spender] */\n      swap1\n      swap4\n        /* \"source/WeenusToken.sol\":5046:5056  msg.sender */\n      swap1\n      swap3\n        /* \"source/WeenusToken.sol\":5091:5128  Approval(msg.sender, spender, tokens) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n      pop\n        /* \"source/WeenusToken.sol\":5146:5150  true */\n      0x01\n        /* \"source/WeenusToken.sol\":4950:5158  function approve(address spender, uint tokens) public returns (bool success) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/WeenusToken.sol\":4431:4545  function totalSupply() public view returns (uint) {\r... */\n    tag_40:\n        /* \"source/WeenusToken.sol\":4475:4479  uint */\n      0x00\n        /* \"source/WeenusToken.sol\":4516:4536  balances[address(0)] */\n      dup1\n      dup1\n      mstore\n        /* \"source/WeenusToken.sol\":4516:4524  balances */\n      0x07\n        /* \"source/WeenusToken.sol\":4516:4536  balances[address(0)] */\n      0x20\n      mstore\n      sload(0x6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df)\n        /* \"source/WeenusToken.sol\":4499:4511  _totalSupply */\n      sload(0x05)\n        /* \"source/WeenusToken.sol\":4499:4537  _totalSupply.sub(balances[address(0)]) */\n      tag_103\n      swap2\n      0xffffffff\n        /* \"source/WeenusToken.sol\":4499:4515  _totalSupply.sub */\n      tag_104\n        /* \"source/WeenusToken.sol\":4499:4537  _totalSupply.sub(balances[address(0)]) */\n      and\n      jump\t// in\n    tag_103:\n        /* \"source/WeenusToken.sol\":4492:4537  return _totalSupply.sub(balances[address(0)]) */\n      swap1\n      pop\n        /* \"source/WeenusToken.sol\":4431:4545  function totalSupply() public view returns (uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"source/WeenusToken.sol\":5164:5507  function transferFrom(address from, address to, uint tokens) public returns (bool success) {\r... */\n    tag_44:\n        /* \"source/WeenusToken.sol\":5283:5297  balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"source/WeenusToken.sol\":5241:5253  bool success */\n      0x00\n        /* \"source/WeenusToken.sol\":5283:5297  balances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"source/WeenusToken.sol\":5283:5291  balances */\n      0x07\n        /* \"source/WeenusToken.sol\":5283:5297  balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"source/WeenusToken.sol\":5283:5309  balances[from].sub(tokens) */\n      tag_106\n      swap1\n        /* \"source/WeenusToken.sol\":5302:5308  tokens */\n      dup4\n        /* \"source/WeenusToken.sol\":5283:5309  balances[from].sub(tokens) */\n      0xffffffff\n        /* \"source/WeenusToken.sol\":5283:5301  balances[from].sub */\n      tag_104\n        /* \"source/WeenusToken.sol\":5283:5309  balances[from].sub(tokens) */\n      and\n      jump\t// in\n    tag_106:\n        /* \"source/WeenusToken.sol\":5266:5280  balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/WeenusToken.sol\":5266:5274  balances */\n      0x07\n        /* \"source/WeenusToken.sol\":5266:5280  balances[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"source/WeenusToken.sol\":5266:5309  balances[from] = balances[from].sub(tokens) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"source/WeenusToken.sol\":5348:5355  allowed */\n      0x08\n        /* \"source/WeenusToken.sol\":5348:5361  allowed[from] */\n      dup2\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"source/WeenusToken.sol\":5362:5372  msg.sender */\n      caller\n        /* \"source/WeenusToken.sol\":5348:5373  allowed[from][msg.sender] */\n      dup4\n      mstore\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"source/WeenusToken.sol\":5348:5385  allowed[from][msg.sender].sub(tokens) */\n      tag_107\n      swap1\n        /* \"source/WeenusToken.sol\":5378:5384  tokens */\n      dup4\n        /* \"source/WeenusToken.sol\":5348:5385  allowed[from][msg.sender].sub(tokens) */\n      0xffffffff\n        /* \"source/WeenusToken.sol\":5348:5377  allowed[from][msg.sender].sub */\n      tag_104\n        /* \"source/WeenusToken.sol\":5348:5385  allowed[from][msg.sender].sub(tokens) */\n      and\n      jump\t// in\n    tag_107:\n        /* \"source/WeenusToken.sol\":5320:5333  allowed[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/WeenusToken.sol\":5320:5327  allowed */\n      0x08\n        /* \"source/WeenusToken.sol\":5320:5333  allowed[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"source/WeenusToken.sol\":5334:5344  msg.sender */\n      caller\n        /* \"source/WeenusToken.sol\":5320:5345  allowed[from][msg.sender] */\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"source/WeenusToken.sol\":5320:5385  allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"source/WeenusToken.sol\":5411:5423  balances[to] */\n      swap2\n      dup7\n      and\n      dup2\n      mstore\n        /* \"source/WeenusToken.sol\":5411:5419  balances */\n      0x07\n        /* \"source/WeenusToken.sol\":5411:5423  balances[to] */\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n        /* \"source/WeenusToken.sol\":5411:5435  balances[to].add(tokens) */\n      tag_108\n      swap1\n        /* \"source/WeenusToken.sol\":5428:5434  tokens */\n      dup4\n        /* \"source/WeenusToken.sol\":5411:5435  balances[to].add(tokens) */\n      0xffffffff\n        /* \"source/WeenusToken.sol\":5411:5427  balances[to].add */\n      tag_96\n        /* \"source/WeenusToken.sol\":5411:5435  balances[to].add(tokens) */\n      and\n      jump\t// in\n    tag_108:\n        /* \"source/WeenusToken.sol\":5396:5408  balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"source/WeenusToken.sol\":5396:5404  balances */\n      0x07\n        /* \"source/WeenusToken.sol\":5396:5408  balances[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"source/WeenusToken.sol\":5396:5435  balances[to] = balances[to].add(tokens) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"source/WeenusToken.sol\":5451:5477  Transfer(from, to, tokens) */\n      dup1\n      mload\n      dup7\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"source/WeenusToken.sol\":5396:5408  balances[to] */\n      swap2\n      swap4\n        /* \"source/WeenusToken.sol\":5451:5477  Transfer(from, to, tokens) */\n      swap3\n      dup9\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n      pop\n        /* \"source/WeenusToken.sol\":5495:5499  true */\n      0x01\n        /* \"source/WeenusToken.sol\":5164:5507  function transferFrom(address from, address to, uint tokens) public returns (bool success) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/WeenusToken.sol\":3945:3966  uint8 public decimals */\n    tag_47:\n      and(0xff, sload(0x04))\n      dup2\n      jump\t// out\n        /* \"source/WeenusToken.sol\":4551:4671  function balanceOf(address tokenOwner) public view returns (uint balance) {\r... */\n    tag_51:\n        /* \"source/WeenusToken.sol\":4643:4663  balances[tokenOwner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/WeenusToken.sol\":4611:4623  uint balance */\n      0x00\n        /* \"source/WeenusToken.sol\":4643:4663  balances[tokenOwner] */\n      swap1\n      dup2\n      mstore\n        /* \"source/WeenusToken.sol\":4643:4651  balances */\n      0x07\n        /* \"source/WeenusToken.sol\":4643:4663  balances[tokenOwner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"source/WeenusToken.sol\":4551:4671  function balanceOf(address tokenOwner) public view returns (uint balance) {\r... */\n      jump\t// out\n        /* \"source/WeenusToken.sol\":3353:3549  function acceptOwnership() public {\r... */\n    tag_54:\n        /* \"source/WeenusToken.sol\":3420:3428  newOwner */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x01))\n        /* \"source/WeenusToken.sol\":3406:3416  msg.sender */\n      caller\n        /* \"source/WeenusToken.sol\":3406:3428  msg.sender == newOwner */\n      eq\n        /* \"source/WeenusToken.sol\":3398:3429  require(msg.sender == newOwner) */\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n        /* \"source/WeenusToken.sol\":3473:3481  newOwner */\n      sload(0x01)\n      0x00\n        /* \"source/WeenusToken.sol\":3466:3471  owner */\n      dup1\n      sload\n        /* \"source/WeenusToken.sol\":3445:3482  OwnershipTransferred(owner, newOwner) */\n      mload(0x40)\n        /* \"source/WeenusToken.sol\":3473:3481  newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap4\n      dup5\n      and\n      swap4\n        /* \"source/WeenusToken.sol\":3466:3471  owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"source/WeenusToken.sol\":3445:3482  OwnershipTransferred(owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"source/WeenusToken.sol\":3501:3509  newOwner */\n      0x01\n      dup1\n      sload\n      0x00\n        /* \"source/WeenusToken.sol\":3493:3509  owner = newOwner */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      swap1\n      dup2\n      and\n        /* \"source/WeenusToken.sol\":3501:3509  newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"source/WeenusToken.sol\":3493:3509  owner = newOwner */\n      or\n      swap1\n      swap2\n      sstore\n        /* \"source/WeenusToken.sol\":3520:3541  newOwner = address(0) */\n      and\n      swap1\n      sstore\n        /* \"source/WeenusToken.sol\":3353:3549  function acceptOwnership() public {\r... */\n      jump\t// out\n        /* \"source/WeenusToken.sol\":2955:2975  address public owner */\n    tag_57:\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x00))\n      dup2\n      jump\t// out\n        /* \"source/WeenusToken.sol\":3892:3912  string public symbol */\n    tag_60:\n      0x02\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x01\n      dup5\n      and\n      iszero\n      0x0100\n      mul\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      add\n      swap1\n      swap4\n      and\n      dup5\n      swap1\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_98\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_99\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_98)\n        /* \"source/WeenusToken.sol\":6292:6357  function drip() public {\r... */\n    tag_67:\n        /* \"source/WeenusToken.sol\":6326:6349  mint(msg.sender, _drop) */\n      tag_116\n        /* \"source/WeenusToken.sol\":6331:6341  msg.sender */\n      caller\n        /* \"source/WeenusToken.sol\":6343:6348  _drop */\n      sload(0x06)\n        /* \"source/WeenusToken.sol\":6326:6330  mint */\n      tag_24\n        /* \"source/WeenusToken.sol\":6326:6349  mint(msg.sender, _drop) */\n      jump\t// in\n    tag_116:\n      pop\n        /* \"source/WeenusToken.sol\":6292:6357  function drip() public {\r... */\n      jump\t// out\n        /* \"source/WeenusToken.sol\":4677:4944  function transfer(address to, uint tokens) public returns (bool success) {\r... */\n    tag_71:\n        /* \"source/WeenusToken.sol\":4793:4803  msg.sender */\n      caller\n        /* \"source/WeenusToken.sol\":4736:4748  bool success */\n      0x00\n        /* \"source/WeenusToken.sol\":4784:4804  balances[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"source/WeenusToken.sol\":4784:4792  balances */\n      0x07\n        /* \"source/WeenusToken.sol\":4784:4804  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"source/WeenusToken.sol\":4784:4816  balances[msg.sender].sub(tokens) */\n      tag_118\n      swap1\n        /* \"source/WeenusToken.sol\":4809:4815  tokens */\n      dup4\n        /* \"source/WeenusToken.sol\":4784:4816  balances[msg.sender].sub(tokens) */\n      0xffffffff\n        /* \"source/WeenusToken.sol\":4784:4808  balances[msg.sender].sub */\n      tag_104\n        /* \"source/WeenusToken.sol\":4784:4816  balances[msg.sender].sub(tokens) */\n      and\n      jump\t// in\n    tag_118:\n        /* \"source/WeenusToken.sol\":4770:4780  msg.sender */\n      caller\n        /* \"source/WeenusToken.sol\":4761:4781  balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/WeenusToken.sol\":4761:4769  balances */\n      0x07\n        /* \"source/WeenusToken.sol\":4761:4781  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"source/WeenusToken.sol\":4761:4816  balances[msg.sender] = balances[msg.sender].sub(tokens) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"source/WeenusToken.sol\":4761:4781  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"source/WeenusToken.sol\":4842:4854  balances[to] */\n      dup6\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"source/WeenusToken.sol\":4842:4866  balances[to].add(tokens) */\n      tag_119\n      swap1\n        /* \"source/WeenusToken.sol\":4859:4865  tokens */\n      dup4\n        /* \"source/WeenusToken.sol\":4842:4866  balances[to].add(tokens) */\n      0xffffffff\n        /* \"source/WeenusToken.sol\":4842:4858  balances[to].add */\n      tag_96\n        /* \"source/WeenusToken.sol\":4842:4866  balances[to].add(tokens) */\n      and\n      jump\t// in\n    tag_119:\n        /* \"source/WeenusToken.sol\":4827:4839  balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"source/WeenusToken.sol\":4827:4835  balances */\n      0x07\n        /* \"source/WeenusToken.sol\":4827:4839  balances[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"source/WeenusToken.sol\":4827:4866  balances[to] = balances[to].add(tokens) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"source/WeenusToken.sol\":4882:4914  Transfer(msg.sender, to, tokens) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"source/WeenusToken.sol\":4827:4839  balances[to] */\n      swap2\n      swap3\n        /* \"source/WeenusToken.sol\":4891:4901  msg.sender */\n      caller\n      swap3\n        /* \"source/WeenusToken.sol\":4882:4914  Transfer(msg.sender, to, tokens) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n      pop\n        /* \"source/WeenusToken.sol\":4932:4936  true */\n      0x01\n        /* \"source/WeenusToken.sol\":4677:4944  function transfer(address to, uint tokens) public returns (bool success) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/WeenusToken.sol\":5666:5999  function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\r... */\n    tag_78:\n        /* \"source/WeenusToken.sol\":5788:5798  msg.sender */\n      caller\n        /* \"source/WeenusToken.sol\":5755:5767  bool success */\n      0x00\n        /* \"source/WeenusToken.sol\":5780:5799  allowed[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"source/WeenusToken.sol\":5780:5787  allowed */\n      0x08\n        /* \"source/WeenusToken.sol\":5780:5799  allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"source/WeenusToken.sol\":5780:5808  allowed[msg.sender][spender] */\n      dup9\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"source/WeenusToken.sol\":5780:5817  allowed[msg.sender][spender] = tokens */\n      dup8\n      swap1\n      sstore\n        /* \"source/WeenusToken.sol\":5833:5870  Approval(msg.sender, spender, tokens) */\n      dup2\n      mload\n      dup8\n      dup2\n      mstore\n      swap2\n      mload\n        /* \"source/WeenusToken.sol\":5755:5767  bool success */\n      swap4\n      swap5\n        /* \"source/WeenusToken.sol\":5780:5808  allowed[msg.sender][spender] */\n      swap1\n      swap4\n        /* \"source/WeenusToken.sol\":5788:5798  msg.sender */\n      swap1\n      swap3\n        /* \"source/WeenusToken.sol\":5833:5870  Approval(msg.sender, spender, tokens) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"source/WeenusToken.sol\":5881:5969  ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data) */\n      mload(0x40)\n      0x8f4ffcb100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"source/WeenusToken.sol\":5929:5939  msg.sender */\n      caller\n        /* \"source/WeenusToken.sol\":5881:5969  ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data) */\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      0x24\n      dup4\n      add\n      dup7\n      swap1\n      mstore\n        /* \"source/WeenusToken.sol\":5957:5961  this */\n      address\n        /* \"source/WeenusToken.sol\":5881:5969  ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data) */\n      0x44\n      dup5\n      add\n      dup2\n      swap1\n      mstore\n      0x80\n      0x64\n      dup6\n      add\n      swap1\n      dup2\n      mstore\n      dup7\n      mload\n      0x84\n      dup7\n      add\n      mstore\n      dup7\n      mload\n        /* \"source/WeenusToken.sol\":5881:5928  ApproveAndCallFallBack(spender).receiveApproval */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup11\n      and\n      swap6\n      0x8f4ffcb1\n      swap6\n        /* \"source/WeenusToken.sol\":5929:5939  msg.sender */\n      swap5\n        /* \"source/WeenusToken.sol\":5941:5947  tokens */\n      dup11\n      swap5\n        /* \"source/WeenusToken.sol\":5957:5961  this */\n      swap4\n        /* \"source/WeenusToken.sol\":5964:5968  data */\n      dup11\n      swap4\n        /* \"source/WeenusToken.sol\":5881:5969  ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data) */\n      swap2\n      swap3\n      swap1\n      swap2\n      0xa4\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_121:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_122\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_121)\n    tag_122:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"source/WeenusToken.sol\":5881:5969  ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_124\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_124:\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_125\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_125:\n        /* \"source/WeenusToken.sol\":5881:5969  ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_126\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_126:\n      pop\n        /* \"source/WeenusToken.sol\":5987:5991  true */\n      0x01\n      swap8\n        /* \"source/WeenusToken.sol\":5666:5999  function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\r... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/WeenusToken.sol\":2982:3005  address public newOwner */\n    tag_81:\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x01))\n      dup2\n      jump\t// out\n        /* \"source/WeenusToken.sol\":6528:6712  function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\r... */\n    tag_85:\n        /* \"source/WeenusToken.sol\":6620:6632  bool success */\n      0x00\n        /* \"source/WeenusToken.sol\":3211:3216  owner */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/WeenusToken.sol\":3197:3207  msg.sender */\n      caller\n        /* \"source/WeenusToken.sol\":3197:3216  msg.sender == owner */\n      eq\n        /* \"source/WeenusToken.sol\":3189:3217  require(msg.sender == owner) */\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n        /* \"source/WeenusToken.sol\":6690:6695  owner */\n      0x00\n      dup1\n      sload\n        /* \"source/WeenusToken.sol\":6652:6704  ERC20Interface(tokenAddress).transfer(owner, tokens) */\n      0x40\n      dup1\n      mload\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"source/WeenusToken.sol\":6652:6689  ERC20Interface(tokenAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"source/WeenusToken.sol\":6690:6695  owner */\n      swap3\n      dup4\n      and\n        /* \"source/WeenusToken.sol\":6652:6704  ERC20Interface(tokenAddress).transfer(owner, tokens) */\n      0x04\n      dup3\n      add\n      mstore\n      0x24\n      dup2\n      add\n      dup7\n      swap1\n      mstore\n      swap1\n      mload\n        /* \"source/WeenusToken.sol\":6652:6689  ERC20Interface(tokenAddress).transfer */\n      swap2\n      dup7\n      and\n      swap3\n      0xa9059cbb\n      swap3\n        /* \"source/WeenusToken.sol\":6652:6704  ERC20Interface(tokenAddress).transfer(owner, tokens) */\n      0x44\n      dup1\n      dup5\n      add\n      swap4\n      0x20\n      swap4\n      swap1\n      dup4\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      dup3\n      swap1\n        /* \"source/WeenusToken.sol\":6652:6689  ERC20Interface(tokenAddress).transfer */\n      dup8\n        /* \"source/WeenusToken.sol\":6652:6704  ERC20Interface(tokenAddress).transfer(owner, tokens) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_130\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_130:\n        /* \"source/WeenusToken.sol\":6652:6704  ERC20Interface(tokenAddress).transfer(owner, tokens) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_131\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_131:\n        /* \"source/WeenusToken.sol\":6652:6704  ERC20Interface(tokenAddress).transfer(owner, tokens) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_132\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_132:\n      pop\n        /* \"source/WeenusToken.sol\":6652:6704  ERC20Interface(tokenAddress).transfer(owner, tokens) */\n      mload\n      swap4\n        /* \"source/WeenusToken.sol\":6528:6712  function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/WeenusToken.sol\":5513:5660  function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r... */\n    tag_89:\n        /* \"source/WeenusToken.sol\":5624:5643  allowed[tokenOwner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"source/WeenusToken.sol\":5590:5604  uint remaining */\n      0x00\n        /* \"source/WeenusToken.sol\":5624:5643  allowed[tokenOwner] */\n      swap1\n      dup2\n      mstore\n        /* \"source/WeenusToken.sol\":5624:5631  allowed */\n      0x08\n        /* \"source/WeenusToken.sol\":5624:5643  allowed[tokenOwner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"source/WeenusToken.sol\":5624:5652  allowed[tokenOwner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"source/WeenusToken.sol\":5513:5660  function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r... */\n      jump\t// out\n        /* \"source/WeenusToken.sol\":3245:3347  function transferOwnership(address _newOwner) public onlyOwner {\r... */\n    tag_93:\n        /* \"source/WeenusToken.sol\":3211:3216  owner */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x00))\n        /* \"source/WeenusToken.sol\":3197:3207  msg.sender */\n      caller\n        /* \"source/WeenusToken.sol\":3197:3216  msg.sender == owner */\n      eq\n        /* \"source/WeenusToken.sol\":3189:3217  require(msg.sender == owner) */\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n        /* \"source/WeenusToken.sol\":3319:3327  newOwner */\n      0x01\n        /* \"source/WeenusToken.sol\":3319:3339  newOwner = _newOwner */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"source/WeenusToken.sol\":3245:3347  function transferOwnership(address _newOwner) public onlyOwner {\r... */\n      jump\t// out\n        /* \"source/WeenusToken.sol\":919:1033  function add(uint a, uint b) internal pure returns (uint c) {\r... */\n    tag_96:\n        /* \"source/WeenusToken.sol\":994:999  a + b */\n      dup2\n      dup2\n      add\n        /* \"source/WeenusToken.sol\":1018:1024  c >= a */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"source/WeenusToken.sol\":1010:1025  require(c >= a) */\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"source/WeenusToken.sol\":1039:1153  function sub(uint a, uint b) internal pure returns (uint c) {\r... */\n    tag_104:\n        /* \"source/WeenusToken.sol\":1091:1097  uint c */\n      0x00\n        /* \"source/WeenusToken.sol\":1118:1124  b <= a */\n      dup3\n      dup3\n      gt\n      iszero\n        /* \"source/WeenusToken.sol\":1110:1125  require(b <= a) */\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n        /* \"source/WeenusToken.sol\":1140:1145  a - b */\n      swap1\n      sub\n      swap1\n        /* \"source/WeenusToken.sol\":1039:1153  function sub(uint a, uint b) internal pure returns (uint c) {\r... */\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058201aa1b20758494595ff29260a7d1359dbb708ec3e2e3eafdc3a6fd75090dd3c970029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060008054600160a060020a031916331790556040805180820190915260068082527f5745454e55530000000000000000000000000000000000000000000000000000602090920191825261006791600291610134565b5060408051808201909152600b8082527f5765656e757320f09f92aa00000000000000000000000000000000000000000060209092019182526100ac91600391610134565b5060048054601260ff19909116179081905560ff16600a0a620f4240810260058190556103e890910260065560008054600160a060020a0390811682526007602090815260408084208590558354815195865290519216937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a36101cf565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017557805160ff19168380011785556101a2565b828001600101855582156101a2579182015b828111156101a2578251825591602001919060010190610187565b506101ae9291506101b2565b5090565b6101cc91905b808211156101ae57600081556001016101b8565b90565b610eb880620001df6000396000f3fe608060405260043610610110576000357c01000000000000000000000000000000000000000000000000000000009004806395d89b41116100a7578063d4ee1d9011610076578063d4ee1d90146104b4578063dc39d06d146104c9578063dd62ed3e1461050f578063f2fde38b1461055757610110565b806395d89b411461036f5780639f678cca14610384578063a9059cbb14610399578063cae9ca51146103df57610110565b8063313ce567116100e3578063313ce567146102b157806370a08231146102dc57806379ba50971461031c5780638da5cb5b1461033157610110565b806306fdde0314610156578063095ea7b3146101e057806318160ddd1461023a57806323b872dd14610261575b61011c33600654610597565b5060003411156101545760405133903480156108fc02916000818181858888f19350505050158015610152573d6000803e3d6000fd5b505b005b34801561016257600080fd5b5061016b610661565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101a557818101518382015260200161018d565b50505050905090810190601f1680156101d25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ec57600080fd5b506102266004803603604081101561020357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561070d565b604080519115158252519081900360200190f35b34801561024657600080fd5b5061024f610780565b60408051918252519081900360200190f35b34801561026d57600080fd5b506102266004803603606081101561028457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356107c3565b3480156102bd57600080fd5b506102c6610902565b6040805160ff9092168252519081900360200190f35b3480156102e857600080fd5b5061024f600480360360208110156102ff57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661090b565b34801561032857600080fd5b50610154610933565b34801561033d57600080fd5b506103466109ed565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561037b57600080fd5b5061016b610a09565b34801561039057600080fd5b50610154610a7f565b3480156103a557600080fd5b50610226600480360360408110156103bc57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610a8e565b3480156103eb57600080fd5b506102266004803603606081101561040257600080fd5b73ffffffffffffffffffffffffffffffffffffffff8235169160208101359181019060608101604082013564010000000081111561043f57600080fd5b82018360208201111561045157600080fd5b8035906020019184600183028401116401000000008311171561047357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b58945050505050565b3480156104c057600080fd5b50610346610cd3565b3480156104d557600080fd5b50610226600480360360408110156104ec57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610cef565b34801561051b57600080fd5b5061024f6004803603604081101561053257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610dc4565b34801561056357600080fd5b506101546004803603602081101561057a57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610dfc565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600760205260408120546105cd908363ffffffff610e6716565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260076020526040902055600554610606908363ffffffff610e6716565b60055560408051838152905173ffffffffffffffffffffffffffffffffffffffff8516916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35060015b92915050565b6003805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f810184900484028201840190925281815292918301828280156107055780601f106106da57610100808354040283529160200191610705565b820191906000526020600020905b8154815290600101906020018083116106e857829003601f168201915b505050505081565b33600081815260086020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b600080805260076020527f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df546005546107be9163ffffffff610e7716565b905090565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600760205260408120546107f9908363ffffffff610e7716565b73ffffffffffffffffffffffffffffffffffffffff85166000908152600760209081526040808320939093556008815282822033835290522054610843908363ffffffff610e7716565b73ffffffffffffffffffffffffffffffffffffffff8086166000908152600860209081526040808320338452825280832094909455918616815260079091522054610894908363ffffffff610e6716565b73ffffffffffffffffffffffffffffffffffffffff80851660008181526007602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b60045460ff1681565b73ffffffffffffffffffffffffffffffffffffffff1660009081526007602052604090205490565b60015473ffffffffffffffffffffffffffffffffffffffff16331461095757600080fd5b6001546000805460405173ffffffffffffffffffffffffffffffffffffffff93841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff841617909155169055565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b600280546040805160206001841615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01909316849004601f810184900484028201840190925281815292918301828280156107055780601f106106da57610100808354040283529160200191610705565b610a8b33600654610597565b50565b33600090815260076020526040812054610aae908363ffffffff610e7716565b336000908152600760205260408082209290925573ffffffffffffffffffffffffffffffffffffffff851681522054610aed908363ffffffff610e6716565b73ffffffffffffffffffffffffffffffffffffffff84166000818152600760209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b33600081815260086020908152604080832073ffffffffffffffffffffffffffffffffffffffff8816808552908352818420879055815187815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a36040517f8f4ffcb1000000000000000000000000000000000000000000000000000000008152336004820181815260248301869052306044840181905260806064850190815286516084860152865173ffffffffffffffffffffffffffffffffffffffff8a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b83811015610c62578181015183820152602001610c4a565b50505050905090810190601f168015610c8f5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610cb157600080fd5b505af1158015610cc5573d6000803e3d6000fd5b506001979650505050505050565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b6000805473ffffffffffffffffffffffffffffffffffffffff163314610d1457600080fd5b60008054604080517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201526024810186905290519186169263a9059cbb926044808401936020939083900390910190829087803b158015610d9157600080fd5b505af1158015610da5573d6000803e3d6000fd5b505050506040513d6020811015610dbb57600080fd5b50519392505050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260086020908152604080832093909416825291909152205490565b60005473ffffffffffffffffffffffffffffffffffffffff163314610e2057600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b8181018281101561065b57600080fd5b600082821115610e8657600080fd5b5090039056fea165627a7a723058201aa1b20758494595ff29260a7d1359dbb708ec3e2e3eafdc3a6fd75090dd3c970029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP1 DUP3 MSTORE PUSH32 0x5745454E55530000000000000000000000000000000000000000000000000000 PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH2 0x67 SWAP2 PUSH1 0x2 SWAP2 PUSH2 0x134 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP1 DUP3 MSTORE PUSH32 0x5765656E757320F09F92AA000000000000000000000000000000000000000000 PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH2 0xAC SWAP2 PUSH1 0x3 SWAP2 PUSH2 0x134 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x12 PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0xFF AND PUSH1 0xA EXP PUSH3 0xF4240 DUP2 MUL PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH2 0x3E8 SWAP1 SWAP2 MUL PUSH1 0x6 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP6 SWAP1 SSTORE DUP4 SLOAD DUP2 MLOAD SWAP6 DUP7 MSTORE SWAP1 MLOAD SWAP3 AND SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH2 0x1CF JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x175 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1A2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1A2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1A2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x187 JUMP JUMPDEST POP PUSH2 0x1AE SWAP3 SWAP2 POP PUSH2 0x1B2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x1CC SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xEB8 DUP1 PUSH3 0x1DF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x110 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA7 JUMPI DUP1 PUSH4 0xD4EE1D90 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0xDC39D06D EQ PUSH2 0x4C9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x557 JUMPI PUSH2 0x110 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x9F678CCA EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x3DF JUMPI PUSH2 0x110 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x331 JUMPI PUSH2 0x110 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x261 JUMPI JUMPDEST PUSH2 0x11C CALLER PUSH1 0x6 SLOAD PUSH2 0x597 JUMP JUMPDEST POP PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x154 JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x152 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x661 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x18D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1D2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x70D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0x780 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x7C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH2 0x902 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x90B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH2 0x933 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x346 PUSH2 0x9ED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0xA09 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH2 0xA7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA8E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xB58 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x346 PUSH2 0xCD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xCEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xDC4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDFC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x5CD SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xE67 AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x5 SLOAD PUSH2 0x606 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xE67 AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x705 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6DA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x705 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH32 0x6D5257204EBE7D88FD91AE87941CB2DD9D8062B64AE5A2BD2D28EC40B9FBF6DF SLOAD PUSH1 0x5 SLOAD PUSH2 0x7BE SWAP2 PUSH4 0xFFFFFFFF PUSH2 0xE77 AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x7F9 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xE77 AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x843 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xE77 AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x894 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xE67 AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP9 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SWAP4 AND DUP5 SWAP1 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x705 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6DA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x705 JUMP JUMPDEST PUSH2 0xA8B CALLER PUSH1 0x6 SLOAD PUSH2 0x597 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xAAE SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xE77 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xAED SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xE67 AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 CALLER SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP8 SWAP1 SSTORE DUP2 MLOAD DUP8 DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH1 0x40 MLOAD PUSH32 0x8F4FFCB100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x24 DUP4 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x64 DUP6 ADD SWAP1 DUP2 MSTORE DUP7 MLOAD PUSH1 0x84 DUP7 ADD MSTORE DUP7 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND SWAP6 PUSH4 0x8F4FFCB1 SWAP6 SWAP5 DUP11 SWAP5 SWAP4 DUP11 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xA4 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC62 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC4A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC8F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xD14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD SWAP2 DUP7 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH1 0x44 DUP1 DUP5 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDA5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xE20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xE86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 BYTE LOG1 0xb2 SMOD PC 0x49 GASLIMIT SWAP6 SELFDESTRUCT 0x29 0x26 EXP PUSH30 0x1359DBB708EC3E2E3EAFDC3A6FD75090DD3C970029000000000000000000 ",
							"sourceMap": "3807:2908:0:-;;;4117:308;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3125:5:0;:18;;-1:-1:-1;;;;;;3125:18:0;3133:10;3125:18;;;4149:17;;;;;;;;;;;;;;;;;;;;;;;:6;;:17;:::i;:::-;-1:-1:-1;4177:20:0;;;;;;;;;;;;;;;;;;;;;;;:4;;:20;:::i;:::-;-1:-1:-1;4208:8:0;:13;;4219:2;-1:-1:-1;;4208:13:0;;;;;;;;;4266:8;4257:2;:18;4247:7;:28;;4232:12;:43;;;4294:4;:25;;;4286:5;:33;-1:-1:-1;4339:5:0;;-1:-1:-1;;;;;4339:5:0;;;4330:15;;:8;:15;;;;;;;;:30;;;4397:5;;4376:41;;;;;;;4397:5;;;4376:41;;;;;;;;;;;3807:2908;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3807:2908:0;;;-1:-1:-1;3807:2908:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610110576000357c01000000000000000000000000000000000000000000000000000000009004806395d89b41116100a7578063d4ee1d9011610076578063d4ee1d90146104b4578063dc39d06d146104c9578063dd62ed3e1461050f578063f2fde38b1461055757610110565b806395d89b411461036f5780639f678cca14610384578063a9059cbb14610399578063cae9ca51146103df57610110565b8063313ce567116100e3578063313ce567146102b157806370a08231146102dc57806379ba50971461031c5780638da5cb5b1461033157610110565b806306fdde0314610156578063095ea7b3146101e057806318160ddd1461023a57806323b872dd14610261575b61011c33600654610597565b5060003411156101545760405133903480156108fc02916000818181858888f19350505050158015610152573d6000803e3d6000fd5b505b005b34801561016257600080fd5b5061016b610661565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101a557818101518382015260200161018d565b50505050905090810190601f1680156101d25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ec57600080fd5b506102266004803603604081101561020357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561070d565b604080519115158252519081900360200190f35b34801561024657600080fd5b5061024f610780565b60408051918252519081900360200190f35b34801561026d57600080fd5b506102266004803603606081101561028457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356107c3565b3480156102bd57600080fd5b506102c6610902565b6040805160ff9092168252519081900360200190f35b3480156102e857600080fd5b5061024f600480360360208110156102ff57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661090b565b34801561032857600080fd5b50610154610933565b34801561033d57600080fd5b506103466109ed565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561037b57600080fd5b5061016b610a09565b34801561039057600080fd5b50610154610a7f565b3480156103a557600080fd5b50610226600480360360408110156103bc57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610a8e565b3480156103eb57600080fd5b506102266004803603606081101561040257600080fd5b73ffffffffffffffffffffffffffffffffffffffff8235169160208101359181019060608101604082013564010000000081111561043f57600080fd5b82018360208201111561045157600080fd5b8035906020019184600183028401116401000000008311171561047357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b58945050505050565b3480156104c057600080fd5b50610346610cd3565b3480156104d557600080fd5b50610226600480360360408110156104ec57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610cef565b34801561051b57600080fd5b5061024f6004803603604081101561053257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610dc4565b34801561056357600080fd5b506101546004803603602081101561057a57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610dfc565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600760205260408120546105cd908363ffffffff610e6716565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260076020526040902055600554610606908363ffffffff610e6716565b60055560408051838152905173ffffffffffffffffffffffffffffffffffffffff8516916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35060015b92915050565b6003805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f810184900484028201840190925281815292918301828280156107055780601f106106da57610100808354040283529160200191610705565b820191906000526020600020905b8154815290600101906020018083116106e857829003601f168201915b505050505081565b33600081815260086020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b600080805260076020527f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df546005546107be9163ffffffff610e7716565b905090565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600760205260408120546107f9908363ffffffff610e7716565b73ffffffffffffffffffffffffffffffffffffffff85166000908152600760209081526040808320939093556008815282822033835290522054610843908363ffffffff610e7716565b73ffffffffffffffffffffffffffffffffffffffff8086166000908152600860209081526040808320338452825280832094909455918616815260079091522054610894908363ffffffff610e6716565b73ffffffffffffffffffffffffffffffffffffffff80851660008181526007602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b60045460ff1681565b73ffffffffffffffffffffffffffffffffffffffff1660009081526007602052604090205490565b60015473ffffffffffffffffffffffffffffffffffffffff16331461095757600080fd5b6001546000805460405173ffffffffffffffffffffffffffffffffffffffff93841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff841617909155169055565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b600280546040805160206001841615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01909316849004601f810184900484028201840190925281815292918301828280156107055780601f106106da57610100808354040283529160200191610705565b610a8b33600654610597565b50565b33600090815260076020526040812054610aae908363ffffffff610e7716565b336000908152600760205260408082209290925573ffffffffffffffffffffffffffffffffffffffff851681522054610aed908363ffffffff610e6716565b73ffffffffffffffffffffffffffffffffffffffff84166000818152600760209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b33600081815260086020908152604080832073ffffffffffffffffffffffffffffffffffffffff8816808552908352818420879055815187815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a36040517f8f4ffcb1000000000000000000000000000000000000000000000000000000008152336004820181815260248301869052306044840181905260806064850190815286516084860152865173ffffffffffffffffffffffffffffffffffffffff8a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b83811015610c62578181015183820152602001610c4a565b50505050905090810190601f168015610c8f5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610cb157600080fd5b505af1158015610cc5573d6000803e3d6000fd5b506001979650505050505050565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b6000805473ffffffffffffffffffffffffffffffffffffffff163314610d1457600080fd5b60008054604080517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201526024810186905290519186169263a9059cbb926044808401936020939083900390910190829087803b158015610d9157600080fd5b505af1158015610da5573d6000803e3d6000fd5b505050506040513d6020811015610dbb57600080fd5b50519392505050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260086020908152604080832093909416825291909152205490565b60005473ffffffffffffffffffffffffffffffffffffffff163314610e2057600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b8181018281101561065b57600080fd5b600082821115610e8657600080fd5b5090039056fea165627a7a723058201aa1b20758494595ff29260a7d1359dbb708ec3e2e3eafdc3a6fd75090dd3c970029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x110 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA7 JUMPI DUP1 PUSH4 0xD4EE1D90 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0xDC39D06D EQ PUSH2 0x4C9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x557 JUMPI PUSH2 0x110 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x9F678CCA EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x3DF JUMPI PUSH2 0x110 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x331 JUMPI PUSH2 0x110 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x261 JUMPI JUMPDEST PUSH2 0x11C CALLER PUSH1 0x6 SLOAD PUSH2 0x597 JUMP JUMPDEST POP PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x154 JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x152 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x661 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x18D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1D2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x70D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0x780 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x7C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH2 0x902 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x90B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH2 0x933 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x346 PUSH2 0x9ED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0xA09 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH2 0xA7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA8E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xB58 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x346 PUSH2 0xCD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xCEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xDC4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDFC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x5CD SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xE67 AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x5 SLOAD PUSH2 0x606 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xE67 AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x705 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6DA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x705 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH32 0x6D5257204EBE7D88FD91AE87941CB2DD9D8062B64AE5A2BD2D28EC40B9FBF6DF SLOAD PUSH1 0x5 SLOAD PUSH2 0x7BE SWAP2 PUSH4 0xFFFFFFFF PUSH2 0xE77 AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x7F9 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xE77 AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x843 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xE77 AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x894 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xE67 AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP9 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SWAP4 AND DUP5 SWAP1 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x705 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6DA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x705 JUMP JUMPDEST PUSH2 0xA8B CALLER PUSH1 0x6 SLOAD PUSH2 0x597 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xAAE SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xE77 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xAED SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xE67 AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 CALLER SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP8 SWAP1 SSTORE DUP2 MLOAD DUP8 DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH1 0x40 MLOAD PUSH32 0x8F4FFCB100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x24 DUP4 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x64 DUP6 ADD SWAP1 DUP2 MSTORE DUP7 MLOAD PUSH1 0x84 DUP7 ADD MSTORE DUP7 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND SWAP6 PUSH4 0x8F4FFCB1 SWAP6 SWAP5 DUP11 SWAP5 SWAP4 DUP11 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xA4 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC62 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC4A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC8F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xD14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD SWAP2 DUP7 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH1 0x44 DUP1 DUP5 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDA5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xE20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xE86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 BYTE LOG1 0xb2 SMOD PC 0x49 GASLIMIT SWAP6 SELFDESTRUCT 0x29 0x26 EXP PUSH30 0x1359DBB708EC3E2E3EAFDC3A6FD75090DD3C970029000000000000000000 ",
							"sourceMap": "3807:2908:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6405:23;6410:10;6422:5;;6405:4;:23::i;:::-;;6455:1;6443:9;:13;6439:76;;;6473:30;;:10;;6493:9;6473:30;;;;;;;;;6493:9;6473:10;:30;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6473:30:0;6439:76;3807:2908;3919:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3919:19:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3919:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4950:208;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4950:208:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4950:208:0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4431:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4431:114:0;;;:::i;:::-;;;;;;;;;;;;;;;;5164:343;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5164:343:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5164:343:0;;;;;;;;;;;;;;;;;;:::i;3945:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3945:21:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4551:120;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4551:120:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4551:120:0;;;;:::i;3353:196::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3353:196:0;;;:::i;2955:20::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2955:20:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3892;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3892:20:0;;;:::i;6292:65::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6292:65:0;;;:::i;4677:267::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4677:267:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4677:267:0;;;;;;;;;:::i;5666:333::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5666:333:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5666:333:0;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;5666:333:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5666:333:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5666:333:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;5666:333:0;;-1:-1:-1;5666:333:0;;-1:-1:-1;;;;;5666:333:0:i;2982:23::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2982:23:0;;;:::i;6528:184::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6528:184:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6528:184:0;;;;;;;;;:::i;5513:147::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5513:147:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5513:147:0;;;;;;;;;;;:::i;3245:102::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3245:102:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3245:102:0;;;;:::i;6005:281::-;6118:20;;;6070:12;6118:20;;;:8;:20;;;;;;:32;;6143:6;6118:32;:24;:32;:::i;:::-;6095:20;;;;;;;:8;:20;;;;;:55;6176:12;;:24;;6193:6;6176:24;:16;:24;:::i;:::-;6161:12;:39;6216:40;;;;;;;;;;;;6233:1;;6216:40;;;;;;;;;-1:-1:-1;6274:4:0;6005:281;;;;;:::o;3919:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4950:208::-;5046:10;5013:12;5038:19;;;:7;:19;;;;;;;;;:28;;;;;;;;;;;:37;;;5091;;;;;;;5013:12;;5038:28;;5046:10;;5091:37;;;;;;;;-1:-1:-1;5146:4:0;4950:208;;;;:::o;4431:114::-;4475:4;4516:20;;;:8;:20;;;;4499:12;;:38;;;:16;:38;:::i;:::-;4492:45;;4431:114;:::o;5164:343::-;5283:14;;;5241:12;5283:14;;;:8;:14;;;;;;:26;;5302:6;5283:26;:18;:26;:::i;:::-;5266:14;;;;;;;:8;:14;;;;;;;;:43;;;;5348:7;:13;;;;;5362:10;5348:25;;;;;;:37;;5378:6;5348:37;:29;:37;:::i;:::-;5320:13;;;;;;;;:7;:13;;;;;;;;5334:10;5320:25;;;;;;;:65;;;;5411:12;;;;;:8;:12;;;;;:24;;5428:6;5411:24;:16;:24;:::i;:::-;5396:12;;;;;;;;:8;:12;;;;;;;;;:39;;;;5451:26;;;;;;;5396:12;;5451:26;;;;;;;;;;;;;-1:-1:-1;5495:4:0;5164:343;;;;;:::o;3945:21::-;;;;;;:::o;4551:120::-;4643:20;;4611:12;4643:20;;;:8;:20;;;;;;;4551:120::o;3353:196::-;3420:8;;;;3406:10;:22;3398:31;;;;;;3473:8;;;3466:5;;3445:37;;3473:8;;;;;3466:5;;;;3445:37;;;3501:8;;;;3493:16;;;;;;3501:8;;;3493:16;;;;3520:21;;;3353:196::o;2955:20::-;;;;;;:::o;3892:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6292:65;6326:23;6331:10;6343:5;;6326:4;:23::i;:::-;;6292:65::o;4677:267::-;4793:10;4736:12;4784:20;;;:8;:20;;;;;;:32;;4809:6;4784:32;:24;:32;:::i;:::-;4770:10;4761:20;;;;:8;:20;;;;;;:55;;;;:20;4842:12;;;;;;:24;;4859:6;4842:24;:16;:24;:::i;:::-;4827:12;;;;;;;:8;:12;;;;;;;;;:39;;;;4882:32;;;;;;;4827:12;;4891:10;;4882:32;;;;;;;;;;-1:-1:-1;4932:4:0;4677:267;;;;:::o;5666:333::-;5788:10;5755:12;5780:19;;;:7;:19;;;;;;;;;:28;;;;;;;;;;;:37;;;5833;;;;;;;5755:12;;5780:28;;5788:10;;5833:37;;;;;;;;5881:88;;;;;5929:10;5881:88;;;;;;;;;;;;5957:4;5881:88;;;;;;;;;;;;;;;;;;;;;:47;;;;;;5929:10;5941:6;;5957:4;5964;;5881:88;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5881:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5881:88:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;5987:4:0;;5666:333;-1:-1:-1;;;;;;;5666:333:0:o;2982:23::-;;;;;;:::o;6528:184::-;6620:12;3211:5;;;;3197:10;:19;3189:28;;;;;;6690:5;;;6652:52;;;;;;:37;6690:5;;;6652:52;;;;;;;;;;;;:37;;;;;;:52;;;;;;;;;;;;;;;;;:37;:52;;;5:2:-1;;;;30:1;27;20:12;5:2;6652:52:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6652:52:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6652:52:0;;6528:184;-1:-1:-1;;;6528:184:0:o;5513:147::-;5624:19;;;;5590:14;5624:19;;;:7;:19;;;;;;;;:28;;;;;;;;;;;;;5513:147::o;3245:102::-;3211:5;;;;3197:10;:19;3189:28;;;;;;3319:8;:20;;;;;;;;;;;;;;;3245:102::o;919:114::-;994:5;;;1018:6;;;;1010:15;;;;;1039:114;1091:6;1118;;;;1110:15;;;;;;-1:-1:-1;1140:5:0;;;1039:114::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "753600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"acceptOwnership()": "42840",
								"allowance(address,address)": "697",
								"approve(address,uint256)": "22304",
								"approveAndCall(address,uint256,bytes)": "infinite",
								"balanceOf(address)": "568",
								"decimals()": "441",
								"drip()": "infinite",
								"name()": "infinite",
								"newOwner()": "440",
								"owner()": "507",
								"symbol()": "infinite",
								"totalSupply()": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferAnyERC20Token(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "20755"
							},
							"internal": {
								"mint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "MSTORE"
								},
								{
									"begin": 4117,
									"end": 4425,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 3125,
									"end": 3130,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3125,
									"end": 3143,
									"name": "DUP1"
								},
								{
									"begin": 3125,
									"end": 3143,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 3125,
									"end": 3143,
									"name": "AND"
								},
								{
									"begin": 3133,
									"end": 3143,
									"name": "CALLER"
								},
								{
									"begin": 3125,
									"end": 3143,
									"name": "OR"
								},
								{
									"begin": 3125,
									"end": 3143,
									"name": "SWAP1"
								},
								{
									"begin": 3125,
									"end": 3143,
									"name": "SSTORE"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "DUP1"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "MLOAD"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "DUP1"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "DUP3"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "ADD"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "SWAP1"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "SWAP2"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "MSTORE"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "DUP1"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "DUP3"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "MSTORE"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "PUSH",
									"value": "5745454E55530000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "SWAP1"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "SWAP3"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "ADD"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "SWAP2"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "DUP3"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "MSTORE"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "SWAP2"
								},
								{
									"begin": 4149,
									"end": 4155,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 4149,
									"end": 4155,
									"name": "SWAP2"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 4149,
									"end": 4166,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "DUP1"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "MLOAD"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "DUP1"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "DUP3"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "ADD"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "SWAP1"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "SWAP2"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "MSTORE"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "DUP1"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "DUP3"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "MSTORE"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "PUSH",
									"value": "5765656E757320F09F92AA000000000000000000000000000000000000000000"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "SWAP1"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "SWAP3"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "ADD"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "SWAP2"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "DUP3"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "MSTORE"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "SWAP2"
								},
								{
									"begin": 4177,
									"end": 4181,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 4177,
									"end": 4181,
									"name": "SWAP2"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 4177,
									"end": 4197,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 4208,
									"end": 4216,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 4208,
									"end": 4221,
									"name": "DUP1"
								},
								{
									"begin": 4208,
									"end": 4221,
									"name": "SLOAD"
								},
								{
									"begin": 4219,
									"end": 4221,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 4208,
									"end": 4221,
									"name": "SWAP1"
								},
								{
									"begin": 4208,
									"end": 4221,
									"name": "SWAP2"
								},
								{
									"begin": 4208,
									"end": 4221,
									"name": "AND"
								},
								{
									"begin": 4208,
									"end": 4221,
									"name": "OR"
								},
								{
									"begin": 4208,
									"end": 4221,
									"name": "SWAP1"
								},
								{
									"begin": 4208,
									"end": 4221,
									"name": "DUP2"
								},
								{
									"begin": 4208,
									"end": 4221,
									"name": "SWAP1"
								},
								{
									"begin": 4208,
									"end": 4221,
									"name": "SSTORE"
								},
								{
									"begin": 4208,
									"end": 4221,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 4266,
									"end": 4274,
									"name": "AND"
								},
								{
									"begin": 4257,
									"end": 4259,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 4257,
									"end": 4275,
									"name": "EXP"
								},
								{
									"begin": 4247,
									"end": 4254,
									"name": "PUSH",
									"value": "F4240"
								},
								{
									"begin": 4247,
									"end": 4275,
									"name": "DUP2"
								},
								{
									"begin": 4247,
									"end": 4275,
									"name": "MUL"
								},
								{
									"begin": 4232,
									"end": 4244,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 4232,
									"end": 4275,
									"name": "DUP2"
								},
								{
									"begin": 4232,
									"end": 4275,
									"name": "SWAP1"
								},
								{
									"begin": 4232,
									"end": 4275,
									"name": "SSTORE"
								},
								{
									"begin": 4294,
									"end": 4298,
									"name": "PUSH",
									"value": "3E8"
								},
								{
									"begin": 4294,
									"end": 4319,
									"name": "SWAP1"
								},
								{
									"begin": 4294,
									"end": 4319,
									"name": "SWAP2"
								},
								{
									"begin": 4294,
									"end": 4319,
									"name": "MUL"
								},
								{
									"begin": 4286,
									"end": 4291,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 4286,
									"end": 4319,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4339,
									"end": 4344,
									"name": "DUP1"
								},
								{
									"begin": 4339,
									"end": 4344,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 4339,
									"end": 4344,
									"name": "SWAP1"
								},
								{
									"begin": 4339,
									"end": 4344,
									"name": "DUP2"
								},
								{
									"begin": 4339,
									"end": 4344,
									"name": "AND"
								},
								{
									"begin": 4330,
									"end": 4345,
									"name": "DUP3"
								},
								{
									"begin": 4330,
									"end": 4345,
									"name": "MSTORE"
								},
								{
									"begin": 4330,
									"end": 4338,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 4330,
									"end": 4345,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4330,
									"end": 4345,
									"name": "SWAP1"
								},
								{
									"begin": 4330,
									"end": 4345,
									"name": "DUP2"
								},
								{
									"begin": 4330,
									"end": 4345,
									"name": "MSTORE"
								},
								{
									"begin": 4330,
									"end": 4345,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4330,
									"end": 4345,
									"name": "DUP1"
								},
								{
									"begin": 4330,
									"end": 4345,
									"name": "DUP5"
								},
								{
									"begin": 4330,
									"end": 4345,
									"name": "KECCAK256"
								},
								{
									"begin": 4330,
									"end": 4360,
									"name": "DUP6"
								},
								{
									"begin": 4330,
									"end": 4360,
									"name": "SWAP1"
								},
								{
									"begin": 4330,
									"end": 4360,
									"name": "SSTORE"
								},
								{
									"begin": 4397,
									"end": 4402,
									"name": "DUP4"
								},
								{
									"begin": 4397,
									"end": 4402,
									"name": "SLOAD"
								},
								{
									"begin": 4376,
									"end": 4417,
									"name": "DUP2"
								},
								{
									"begin": 4376,
									"end": 4417,
									"name": "MLOAD"
								},
								{
									"begin": 4376,
									"end": 4417,
									"name": "SWAP6"
								},
								{
									"begin": 4376,
									"end": 4417,
									"name": "DUP7"
								},
								{
									"begin": 4376,
									"end": 4417,
									"name": "MSTORE"
								},
								{
									"begin": 4376,
									"end": 4417,
									"name": "SWAP1"
								},
								{
									"begin": 4376,
									"end": 4417,
									"name": "MLOAD"
								},
								{
									"begin": 4397,
									"end": 4402,
									"name": "SWAP3"
								},
								{
									"begin": 4397,
									"end": 4402,
									"name": "AND"
								},
								{
									"begin": 4397,
									"end": 4402,
									"name": "SWAP4"
								},
								{
									"begin": 4376,
									"end": 4417,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 4376,
									"end": 4417,
									"name": "SWAP3"
								},
								{
									"begin": 4376,
									"end": 4417,
									"name": "SWAP1"
								},
								{
									"begin": 4376,
									"end": 4417,
									"name": "DUP2"
								},
								{
									"begin": 4376,
									"end": 4417,
									"name": "SWAP1"
								},
								{
									"begin": 4376,
									"end": 4417,
									"name": "SUB"
								},
								{
									"begin": 4376,
									"end": 4417,
									"name": "SWAP1"
								},
								{
									"begin": 4376,
									"end": 4417,
									"name": "SWAP2"
								},
								{
									"begin": 4376,
									"end": 4417,
									"name": "ADD"
								},
								{
									"begin": 4376,
									"end": 4417,
									"name": "SWAP1"
								},
								{
									"begin": 4376,
									"end": 4417,
									"name": "LOG3"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "JUMP"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "JUMPDEST"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP3"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP1"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SLOAD"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP2"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "AND"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "ISZERO"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "MUL"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SUB"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "AND"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SWAP1"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DIV"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SWAP1"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "MSTORE"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "KECCAK256"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SWAP1"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "ADD"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SWAP1"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DIV"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP2"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "ADD"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SWAP3"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP3"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "LT"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "JUMPI"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP1"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "MLOAD"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "NOT"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "AND"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP4"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP1"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "ADD"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "OR"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP6"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SSTORE"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "JUMP"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "JUMPDEST"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP3"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP1"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "ADD"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "ADD"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP6"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SSTORE"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP3"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "ISZERO"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "JUMPI"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SWAP2"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP3"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "ADD"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "JUMPDEST"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP3"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP2"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "GT"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "ISZERO"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "JUMPI"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP3"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "MLOAD"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP3"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SSTORE"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SWAP2"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "ADD"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SWAP2"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SWAP1"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "ADD"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SWAP1"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "JUMP"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SWAP3"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "JUMPDEST"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "POP"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SWAP1"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "JUMPDEST"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SWAP2"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SWAP1"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "JUMPDEST"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP1"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP3"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "GT"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "ISZERO"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "JUMPI"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP2"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SSTORE"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "ADD"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "JUMP"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "JUMPDEST"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "SWAP1"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "JUMPDEST"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "DUP1"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "CODECOPY"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3807,
									"end": 6715,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058201aa1b20758494595ff29260a7d1359dbb708ec3e2e3eafdc3a6fd75090dd3c970029",
									".code": [
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "MSTORE"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "LT"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPI"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "SWAP1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "DIV"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "DUP1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "GT"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPI"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "DUP1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "D4EE1D90"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "GT"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPI"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "DUP1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "D4EE1D90"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "EQ"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPI"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "DUP1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "DC39D06D"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "EQ"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPI"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "DUP1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "EQ"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPI"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "DUP1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "EQ"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPI"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMP"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPDEST"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "DUP1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "EQ"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPI"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "DUP1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "9F678CCA"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "EQ"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPI"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "DUP1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "EQ"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPI"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "DUP1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "CAE9CA51"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "EQ"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPI"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMP"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPDEST"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "DUP1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "GT"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPI"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "DUP1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "EQ"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPI"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "DUP1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "EQ"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPI"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "DUP1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "79BA5097"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "EQ"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPI"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "DUP1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "EQ"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPI"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMP"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPDEST"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "DUP1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "EQ"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPI"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "DUP1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "EQ"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPI"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "DUP1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "EQ"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPI"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "DUP1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "EQ"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPI"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "JUMPDEST"
										},
										{
											"begin": 6405,
											"end": 6428,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 6410,
											"end": 6420,
											"name": "CALLER"
										},
										{
											"begin": 6422,
											"end": 6427,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 6422,
											"end": 6427,
											"name": "SLOAD"
										},
										{
											"begin": 6405,
											"end": 6409,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 6405,
											"end": 6428,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6405,
											"end": 6428,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 6405,
											"end": 6428,
											"name": "JUMPDEST"
										},
										{
											"begin": 6405,
											"end": 6428,
											"name": "POP"
										},
										{
											"begin": 6455,
											"end": 6456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6443,
											"end": 6452,
											"name": "CALLVALUE"
										},
										{
											"begin": 6443,
											"end": 6456,
											"name": "GT"
										},
										{
											"begin": 6439,
											"end": 6515,
											"name": "ISZERO"
										},
										{
											"begin": 6439,
											"end": 6515,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 6439,
											"end": 6515,
											"name": "JUMPI"
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "MLOAD"
										},
										{
											"begin": 6473,
											"end": 6483,
											"name": "CALLER"
										},
										{
											"begin": 6473,
											"end": 6483,
											"name": "SWAP1"
										},
										{
											"begin": 6493,
											"end": 6502,
											"name": "CALLVALUE"
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "DUP1"
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "ISZERO"
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "MUL"
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "SWAP2"
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "DUP2"
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "DUP2"
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "DUP2"
										},
										{
											"begin": 6493,
											"end": 6502,
											"name": "DUP6"
										},
										{
											"begin": 6473,
											"end": 6483,
											"name": "DUP9"
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "DUP9"
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "CALL"
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "SWAP4"
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "POP"
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "POP"
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "POP"
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "POP"
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6473,
											"end": 6503,
											"name": "POP"
										},
										{
											"begin": 6439,
											"end": 6515,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 6439,
											"end": 6515,
											"name": "JUMPDEST"
										},
										{
											"begin": 3807,
											"end": 6715,
											"name": "STOP"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "JUMPDEST"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "JUMPDEST"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "MLOAD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP3"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "MSTORE"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP4"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "MLOAD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP2"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP4"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "ADD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "MSTORE"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP4"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "MLOAD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP2"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP3"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP4"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP3"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP4"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "ADD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP2"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP6"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "ADD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP4"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP4"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP2"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "ADD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "AND"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "ISZERO"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "JUMPI"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP3"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SUB"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "MLOAD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP4"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SUB"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "EXP"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SUB"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "NOT"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "AND"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP2"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "MSTORE"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "ADD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP2"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "JUMPDEST"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP3"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "MLOAD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP2"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SUB"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "RETURN"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "JUMPDEST"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "POP"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "DUP1"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "DUP2"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "AND"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "SWAP1"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "ADD"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "JUMPDEST"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "DUP1"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "MLOAD"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "SWAP2"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "ISZERO"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "ISZERO"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "DUP3"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "MSTORE"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "MLOAD"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "SWAP1"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "DUP2"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "SWAP1"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "SUB"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "ADD"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "SWAP1"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "RETURN"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "JUMPDEST"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "POP"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "JUMPDEST"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "DUP1"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "MLOAD"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "SWAP2"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "DUP3"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "MSTORE"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "MLOAD"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "SWAP1"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "DUP2"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "SWAP1"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "SUB"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "ADD"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "SWAP1"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "RETURN"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "JUMPDEST"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "POP"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "DUP1"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "DUP2"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "DUP2"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "AND"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "SWAP2"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "DUP2"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "ADD"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "SWAP1"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "SWAP2"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "AND"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "SWAP1"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "ADD"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "JUMPDEST"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "POP"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "JUMPDEST"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "DUP1"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "MLOAD"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "SWAP1"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "SWAP3"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "AND"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "DUP3"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "MSTORE"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "MLOAD"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "SWAP1"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "DUP2"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "SWAP1"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "SUB"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "ADD"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "SWAP1"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "RETURN"
										},
										{
											"begin": 4551,
											"end": 4671,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 4551,
											"end": 4671,
											"name": "JUMPDEST"
										},
										{
											"begin": 4551,
											"end": 4671,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4551,
											"end": 4671,
											"name": "POP"
										},
										{
											"begin": 4551,
											"end": 4671,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 4551,
											"end": 4671,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4551,
											"end": 4671,
											"name": "DUP1"
										},
										{
											"begin": 4551,
											"end": 4671,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4551,
											"end": 4671,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4551,
											"end": 4671,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4551,
											"end": 4671,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4551,
											"end": 4671,
											"name": "AND"
										},
										{
											"begin": 4551,
											"end": 4671,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 4551,
											"end": 4671,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "JUMPDEST"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "POP"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "JUMPDEST"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "POP"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "JUMPDEST"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "DUP1"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "MLOAD"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "SWAP1"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "SWAP3"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "AND"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "DUP3"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "MSTORE"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "MLOAD"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "SWAP1"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "DUP2"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "SWAP1"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "SUB"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "ADD"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "SWAP1"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "RETURN"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "JUMPDEST"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "POP"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6292,
											"end": 6357,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 6292,
											"end": 6357,
											"name": "JUMPDEST"
										},
										{
											"begin": 6292,
											"end": 6357,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6292,
											"end": 6357,
											"name": "POP"
										},
										{
											"begin": 6292,
											"end": 6357,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 6292,
											"end": 6357,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 6292,
											"end": 6357,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "JUMPDEST"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "POP"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "DUP1"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "DUP2"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "AND"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "SWAP1"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "ADD"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "JUMPDEST"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "POP"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "DUP1"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "DUP3"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "AND"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "SWAP2"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "DUP2"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "ADD"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "SWAP2"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "DUP2"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "ADD"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "SWAP1"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "DUP2"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "ADD"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "DUP3"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "ADD"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "DUP3"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "DUP1"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "SWAP1"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "ADD"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "SWAP2"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "SWAP1"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "DUP1"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "DUP1"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "ADD"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "DUP1"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "SWAP2"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "DIV"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "MUL"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "ADD"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "MLOAD"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "SWAP1"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "DUP2"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "ADD"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "MSTORE"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "DUP1"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "SWAP4"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "SWAP3"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "SWAP2"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "SWAP1"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "DUP2"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "DUP2"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "MSTORE"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "ADD"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "DUP4"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "SWAP3"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP1"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "SWAP3"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "JUMPDEST"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "POP"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "JUMPDEST"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "POP"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "DUP1"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "DUP2"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "AND"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "SWAP1"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "ADD"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "JUMPDEST"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "POP"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "DUP1"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "DUP2"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "DUP2"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "AND"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "SWAP2"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "ADD"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "AND"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "JUMPDEST"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "POP"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "DUP1"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "AND"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6005,
											"end": 6286,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 6005,
											"end": 6286,
											"name": "JUMPDEST"
										},
										{
											"begin": 6118,
											"end": 6138,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6118,
											"end": 6138,
											"name": "DUP3"
										},
										{
											"begin": 6118,
											"end": 6138,
											"name": "AND"
										},
										{
											"begin": 6070,
											"end": 6082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6118,
											"end": 6138,
											"name": "SWAP1"
										},
										{
											"begin": 6118,
											"end": 6138,
											"name": "DUP2"
										},
										{
											"begin": 6118,
											"end": 6138,
											"name": "MSTORE"
										},
										{
											"begin": 6118,
											"end": 6126,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 6118,
											"end": 6138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6118,
											"end": 6138,
											"name": "MSTORE"
										},
										{
											"begin": 6118,
											"end": 6138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6118,
											"end": 6138,
											"name": "DUP2"
										},
										{
											"begin": 6118,
											"end": 6138,
											"name": "KECCAK256"
										},
										{
											"begin": 6118,
											"end": 6138,
											"name": "SLOAD"
										},
										{
											"begin": 6118,
											"end": 6150,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 6118,
											"end": 6150,
											"name": "SWAP1"
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "DUP4"
										},
										{
											"begin": 6118,
											"end": 6150,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6118,
											"end": 6142,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 6118,
											"end": 6150,
											"name": "AND"
										},
										{
											"begin": 6118,
											"end": 6150,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6118,
											"end": 6150,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 6118,
											"end": 6150,
											"name": "JUMPDEST"
										},
										{
											"begin": 6095,
											"end": 6115,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6095,
											"end": 6115,
											"name": "DUP5"
										},
										{
											"begin": 6095,
											"end": 6115,
											"name": "AND"
										},
										{
											"begin": 6095,
											"end": 6115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6095,
											"end": 6115,
											"name": "SWAP1"
										},
										{
											"begin": 6095,
											"end": 6115,
											"name": "DUP2"
										},
										{
											"begin": 6095,
											"end": 6115,
											"name": "MSTORE"
										},
										{
											"begin": 6095,
											"end": 6103,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 6095,
											"end": 6115,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6095,
											"end": 6115,
											"name": "MSTORE"
										},
										{
											"begin": 6095,
											"end": 6115,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6095,
											"end": 6115,
											"name": "SWAP1"
										},
										{
											"begin": 6095,
											"end": 6115,
											"name": "KECCAK256"
										},
										{
											"begin": 6095,
											"end": 6150,
											"name": "SSTORE"
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "SLOAD"
										},
										{
											"begin": 6176,
											"end": 6200,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 6176,
											"end": 6200,
											"name": "SWAP1"
										},
										{
											"begin": 6193,
											"end": 6199,
											"name": "DUP4"
										},
										{
											"begin": 6176,
											"end": 6200,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6176,
											"end": 6192,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 6176,
											"end": 6200,
											"name": "AND"
										},
										{
											"begin": 6176,
											"end": 6200,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6176,
											"end": 6200,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 6176,
											"end": 6200,
											"name": "JUMPDEST"
										},
										{
											"begin": 6161,
											"end": 6173,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6161,
											"end": 6200,
											"name": "SSTORE"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "DUP1"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "MLOAD"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "DUP4"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "DUP2"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "MSTORE"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "SWAP1"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "MLOAD"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "DUP6"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "AND"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "SWAP2"
										},
										{
											"begin": 6233,
											"end": 6234,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6234,
											"name": "SWAP2"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "SWAP2"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "DUP2"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "SWAP1"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "SUB"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "ADD"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "SWAP1"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6274,
											"end": 6278,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6005,
											"end": 6286,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 6005,
											"end": 6286,
											"name": "JUMPDEST"
										},
										{
											"begin": 6005,
											"end": 6286,
											"name": "SWAP3"
										},
										{
											"begin": 6005,
											"end": 6286,
											"name": "SWAP2"
										},
										{
											"begin": 6005,
											"end": 6286,
											"name": "POP"
										},
										{
											"begin": 6005,
											"end": 6286,
											"name": "POP"
										},
										{
											"begin": 6005,
											"end": 6286,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "JUMPDEST"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SLOAD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "MLOAD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP6"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "AND"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "ISZERO"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "MUL"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "ADD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP5"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "AND"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP4"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP4"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DIV"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP2"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "ADD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP5"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DIV"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP5"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "MUL"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP3"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "ADD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP5"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "ADD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP3"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "MSTORE"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP2"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP2"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "MSTORE"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP3"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP2"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP4"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "ADD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP3"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP3"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "ISZERO"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "JUMPI"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "LT"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "JUMPI"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP4"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SLOAD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DIV"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "MUL"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP4"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "MSTORE"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP2"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "ADD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP2"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "JUMP"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "JUMPDEST"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP3"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "ADD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP2"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "MSTORE"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "KECCAK256"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "JUMPDEST"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP2"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SLOAD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP2"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "MSTORE"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "ADD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "ADD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP4"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "GT"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "JUMPI"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP3"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP1"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SUB"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "AND"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP3"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "ADD"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "SWAP2"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "JUMPDEST"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "POP"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "DUP2"
										},
										{
											"begin": 3919,
											"end": 3938,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "JUMPDEST"
										},
										{
											"begin": 5046,
											"end": 5056,
											"name": "CALLER"
										},
										{
											"begin": 5013,
											"end": 5025,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5038,
											"end": 5057,
											"name": "DUP2"
										},
										{
											"begin": 5038,
											"end": 5057,
											"name": "DUP2"
										},
										{
											"begin": 5038,
											"end": 5057,
											"name": "MSTORE"
										},
										{
											"begin": 5038,
											"end": 5045,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5038,
											"end": 5057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5038,
											"end": 5057,
											"name": "SWAP1"
										},
										{
											"begin": 5038,
											"end": 5057,
											"name": "DUP2"
										},
										{
											"begin": 5038,
											"end": 5057,
											"name": "MSTORE"
										},
										{
											"begin": 5038,
											"end": 5057,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5038,
											"end": 5057,
											"name": "DUP1"
										},
										{
											"begin": 5038,
											"end": 5057,
											"name": "DUP4"
										},
										{
											"begin": 5038,
											"end": 5057,
											"name": "KECCAK256"
										},
										{
											"begin": 5038,
											"end": 5057,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5038,
											"end": 5066,
											"name": "DUP8"
										},
										{
											"begin": 5038,
											"end": 5066,
											"name": "AND"
										},
										{
											"begin": 5038,
											"end": 5066,
											"name": "DUP1"
										},
										{
											"begin": 5038,
											"end": 5066,
											"name": "DUP6"
										},
										{
											"begin": 5038,
											"end": 5066,
											"name": "MSTORE"
										},
										{
											"begin": 5038,
											"end": 5066,
											"name": "SWAP1"
										},
										{
											"begin": 5038,
											"end": 5066,
											"name": "DUP4"
										},
										{
											"begin": 5038,
											"end": 5066,
											"name": "MSTORE"
										},
										{
											"begin": 5038,
											"end": 5066,
											"name": "DUP2"
										},
										{
											"begin": 5038,
											"end": 5066,
											"name": "DUP5"
										},
										{
											"begin": 5038,
											"end": 5066,
											"name": "KECCAK256"
										},
										{
											"begin": 5038,
											"end": 5075,
											"name": "DUP7"
										},
										{
											"begin": 5038,
											"end": 5075,
											"name": "SWAP1"
										},
										{
											"begin": 5038,
											"end": 5075,
											"name": "SSTORE"
										},
										{
											"begin": 5091,
											"end": 5128,
											"name": "DUP2"
										},
										{
											"begin": 5091,
											"end": 5128,
											"name": "MLOAD"
										},
										{
											"begin": 5091,
											"end": 5128,
											"name": "DUP7"
										},
										{
											"begin": 5091,
											"end": 5128,
											"name": "DUP2"
										},
										{
											"begin": 5091,
											"end": 5128,
											"name": "MSTORE"
										},
										{
											"begin": 5091,
											"end": 5128,
											"name": "SWAP2"
										},
										{
											"begin": 5091,
											"end": 5128,
											"name": "MLOAD"
										},
										{
											"begin": 5013,
											"end": 5025,
											"name": "SWAP4"
										},
										{
											"begin": 5013,
											"end": 5025,
											"name": "SWAP5"
										},
										{
											"begin": 5038,
											"end": 5066,
											"name": "SWAP1"
										},
										{
											"begin": 5038,
											"end": 5066,
											"name": "SWAP4"
										},
										{
											"begin": 5046,
											"end": 5056,
											"name": "SWAP1"
										},
										{
											"begin": 5046,
											"end": 5056,
											"name": "SWAP3"
										},
										{
											"begin": 5091,
											"end": 5128,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5091,
											"end": 5128,
											"name": "SWAP3"
										},
										{
											"begin": 5091,
											"end": 5128,
											"name": "DUP3"
										},
										{
											"begin": 5091,
											"end": 5128,
											"name": "SWAP1"
										},
										{
											"begin": 5091,
											"end": 5128,
											"name": "SUB"
										},
										{
											"begin": 5091,
											"end": 5128,
											"name": "ADD"
										},
										{
											"begin": 5091,
											"end": 5128,
											"name": "SWAP1"
										},
										{
											"begin": 5091,
											"end": 5128,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5146,
											"end": 5150,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "SWAP3"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "SWAP2"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "POP"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "POP"
										},
										{
											"begin": 4950,
											"end": 5158,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "JUMPDEST"
										},
										{
											"begin": 4475,
											"end": 4479,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4516,
											"end": 4536,
											"name": "DUP1"
										},
										{
											"begin": 4516,
											"end": 4536,
											"name": "DUP1"
										},
										{
											"begin": 4516,
											"end": 4536,
											"name": "MSTORE"
										},
										{
											"begin": 4516,
											"end": 4524,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4516,
											"end": 4536,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4516,
											"end": 4536,
											"name": "MSTORE"
										},
										{
											"begin": 4516,
											"end": 4536,
											"name": "PUSH",
											"value": "6D5257204EBE7D88FD91AE87941CB2DD9D8062B64AE5A2BD2D28EC40B9FBF6DF"
										},
										{
											"begin": 4516,
											"end": 4536,
											"name": "SLOAD"
										},
										{
											"begin": 4499,
											"end": 4511,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4499,
											"end": 4511,
											"name": "SLOAD"
										},
										{
											"begin": 4499,
											"end": 4537,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 4499,
											"end": 4537,
											"name": "SWAP2"
										},
										{
											"begin": 4499,
											"end": 4537,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4499,
											"end": 4515,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 4499,
											"end": 4537,
											"name": "AND"
										},
										{
											"begin": 4499,
											"end": 4537,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4499,
											"end": 4537,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 4499,
											"end": 4537,
											"name": "JUMPDEST"
										},
										{
											"begin": 4492,
											"end": 4537,
											"name": "SWAP1"
										},
										{
											"begin": 4492,
											"end": 4537,
											"name": "POP"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "SWAP1"
										},
										{
											"begin": 4431,
											"end": 4545,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "JUMPDEST"
										},
										{
											"begin": 5283,
											"end": 5297,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5283,
											"end": 5297,
											"name": "DUP4"
										},
										{
											"begin": 5283,
											"end": 5297,
											"name": "AND"
										},
										{
											"begin": 5241,
											"end": 5253,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5283,
											"end": 5297,
											"name": "SWAP1"
										},
										{
											"begin": 5283,
											"end": 5297,
											"name": "DUP2"
										},
										{
											"begin": 5283,
											"end": 5297,
											"name": "MSTORE"
										},
										{
											"begin": 5283,
											"end": 5291,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 5283,
											"end": 5297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5283,
											"end": 5297,
											"name": "MSTORE"
										},
										{
											"begin": 5283,
											"end": 5297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5283,
											"end": 5297,
											"name": "DUP2"
										},
										{
											"begin": 5283,
											"end": 5297,
											"name": "KECCAK256"
										},
										{
											"begin": 5283,
											"end": 5297,
											"name": "SLOAD"
										},
										{
											"begin": 5283,
											"end": 5309,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 5283,
											"end": 5309,
											"name": "SWAP1"
										},
										{
											"begin": 5302,
											"end": 5308,
											"name": "DUP4"
										},
										{
											"begin": 5283,
											"end": 5309,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5283,
											"end": 5301,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 5283,
											"end": 5309,
											"name": "AND"
										},
										{
											"begin": 5283,
											"end": 5309,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5283,
											"end": 5309,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 5283,
											"end": 5309,
											"name": "JUMPDEST"
										},
										{
											"begin": 5266,
											"end": 5280,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5266,
											"end": 5280,
											"name": "DUP6"
										},
										{
											"begin": 5266,
											"end": 5280,
											"name": "AND"
										},
										{
											"begin": 5266,
											"end": 5280,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5266,
											"end": 5280,
											"name": "SWAP1"
										},
										{
											"begin": 5266,
											"end": 5280,
											"name": "DUP2"
										},
										{
											"begin": 5266,
											"end": 5280,
											"name": "MSTORE"
										},
										{
											"begin": 5266,
											"end": 5274,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 5266,
											"end": 5280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5266,
											"end": 5280,
											"name": "SWAP1"
										},
										{
											"begin": 5266,
											"end": 5280,
											"name": "DUP2"
										},
										{
											"begin": 5266,
											"end": 5280,
											"name": "MSTORE"
										},
										{
											"begin": 5266,
											"end": 5280,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5266,
											"end": 5280,
											"name": "DUP1"
										},
										{
											"begin": 5266,
											"end": 5280,
											"name": "DUP4"
										},
										{
											"begin": 5266,
											"end": 5280,
											"name": "KECCAK256"
										},
										{
											"begin": 5266,
											"end": 5309,
											"name": "SWAP4"
										},
										{
											"begin": 5266,
											"end": 5309,
											"name": "SWAP1"
										},
										{
											"begin": 5266,
											"end": 5309,
											"name": "SWAP4"
										},
										{
											"begin": 5266,
											"end": 5309,
											"name": "SSTORE"
										},
										{
											"begin": 5348,
											"end": 5355,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5348,
											"end": 5361,
											"name": "DUP2"
										},
										{
											"begin": 5348,
											"end": 5361,
											"name": "MSTORE"
										},
										{
											"begin": 5348,
											"end": 5361,
											"name": "DUP3"
										},
										{
											"begin": 5348,
											"end": 5361,
											"name": "DUP3"
										},
										{
											"begin": 5348,
											"end": 5361,
											"name": "KECCAK256"
										},
										{
											"begin": 5362,
											"end": 5372,
											"name": "CALLER"
										},
										{
											"begin": 5348,
											"end": 5373,
											"name": "DUP4"
										},
										{
											"begin": 5348,
											"end": 5373,
											"name": "MSTORE"
										},
										{
											"begin": 5348,
											"end": 5373,
											"name": "SWAP1"
										},
										{
											"begin": 5348,
											"end": 5373,
											"name": "MSTORE"
										},
										{
											"begin": 5348,
											"end": 5373,
											"name": "KECCAK256"
										},
										{
											"begin": 5348,
											"end": 5373,
											"name": "SLOAD"
										},
										{
											"begin": 5348,
											"end": 5385,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 5348,
											"end": 5385,
											"name": "SWAP1"
										},
										{
											"begin": 5378,
											"end": 5384,
											"name": "DUP4"
										},
										{
											"begin": 5348,
											"end": 5385,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5348,
											"end": 5377,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 5348,
											"end": 5385,
											"name": "AND"
										},
										{
											"begin": 5348,
											"end": 5385,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5348,
											"end": 5385,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 5348,
											"end": 5385,
											"name": "JUMPDEST"
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "DUP1"
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "DUP7"
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "AND"
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "SWAP1"
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "DUP2"
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "MSTORE"
										},
										{
											"begin": 5320,
											"end": 5327,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "SWAP1"
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "DUP2"
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "MSTORE"
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "DUP1"
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "DUP4"
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "KECCAK256"
										},
										{
											"begin": 5334,
											"end": 5344,
											"name": "CALLER"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "DUP5"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "MSTORE"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "DUP3"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "MSTORE"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "DUP1"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "DUP4"
										},
										{
											"begin": 5320,
											"end": 5345,
											"name": "KECCAK256"
										},
										{
											"begin": 5320,
											"end": 5385,
											"name": "SWAP5"
										},
										{
											"begin": 5320,
											"end": 5385,
											"name": "SWAP1"
										},
										{
											"begin": 5320,
											"end": 5385,
											"name": "SWAP5"
										},
										{
											"begin": 5320,
											"end": 5385,
											"name": "SSTORE"
										},
										{
											"begin": 5411,
											"end": 5423,
											"name": "SWAP2"
										},
										{
											"begin": 5411,
											"end": 5423,
											"name": "DUP7"
										},
										{
											"begin": 5411,
											"end": 5423,
											"name": "AND"
										},
										{
											"begin": 5411,
											"end": 5423,
											"name": "DUP2"
										},
										{
											"begin": 5411,
											"end": 5423,
											"name": "MSTORE"
										},
										{
											"begin": 5411,
											"end": 5419,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 5411,
											"end": 5423,
											"name": "SWAP1"
										},
										{
											"begin": 5411,
											"end": 5423,
											"name": "SWAP2"
										},
										{
											"begin": 5411,
											"end": 5423,
											"name": "MSTORE"
										},
										{
											"begin": 5411,
											"end": 5423,
											"name": "KECCAK256"
										},
										{
											"begin": 5411,
											"end": 5423,
											"name": "SLOAD"
										},
										{
											"begin": 5411,
											"end": 5435,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 5411,
											"end": 5435,
											"name": "SWAP1"
										},
										{
											"begin": 5428,
											"end": 5434,
											"name": "DUP4"
										},
										{
											"begin": 5411,
											"end": 5435,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5411,
											"end": 5427,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 5411,
											"end": 5435,
											"name": "AND"
										},
										{
											"begin": 5411,
											"end": 5435,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5411,
											"end": 5435,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 5411,
											"end": 5435,
											"name": "JUMPDEST"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "DUP1"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "DUP6"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "AND"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "DUP2"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "DUP2"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "MSTORE"
										},
										{
											"begin": 5396,
											"end": 5404,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "SWAP1"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "DUP2"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "MSTORE"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "SWAP2"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "DUP3"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "SWAP1"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "KECCAK256"
										},
										{
											"begin": 5396,
											"end": 5435,
											"name": "SWAP5"
										},
										{
											"begin": 5396,
											"end": 5435,
											"name": "SWAP1"
										},
										{
											"begin": 5396,
											"end": 5435,
											"name": "SWAP5"
										},
										{
											"begin": 5396,
											"end": 5435,
											"name": "SSTORE"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "DUP1"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "MLOAD"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "DUP7"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "DUP2"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "MSTORE"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "SWAP1"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "MLOAD"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "SWAP2"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "SWAP4"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "SWAP3"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "DUP9"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "AND"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "SWAP3"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "SWAP3"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "SWAP2"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "DUP3"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "SWAP1"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "SUB"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "ADD"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "SWAP1"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5495,
											"end": 5499,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "SWAP4"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "SWAP3"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "POP"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "POP"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "POP"
										},
										{
											"begin": 5164,
											"end": 5507,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "JUMPDEST"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "SLOAD"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "AND"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "DUP2"
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4551,
											"end": 4671,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 4551,
											"end": 4671,
											"name": "JUMPDEST"
										},
										{
											"begin": 4643,
											"end": 4663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4643,
											"end": 4663,
											"name": "AND"
										},
										{
											"begin": 4611,
											"end": 4623,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4643,
											"end": 4663,
											"name": "SWAP1"
										},
										{
											"begin": 4643,
											"end": 4663,
											"name": "DUP2"
										},
										{
											"begin": 4643,
											"end": 4663,
											"name": "MSTORE"
										},
										{
											"begin": 4643,
											"end": 4651,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4643,
											"end": 4663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4643,
											"end": 4663,
											"name": "MSTORE"
										},
										{
											"begin": 4643,
											"end": 4663,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4643,
											"end": 4663,
											"name": "SWAP1"
										},
										{
											"begin": 4643,
											"end": 4663,
											"name": "KECCAK256"
										},
										{
											"begin": 4643,
											"end": 4663,
											"name": "SLOAD"
										},
										{
											"begin": 4643,
											"end": 4663,
											"name": "SWAP1"
										},
										{
											"begin": 4551,
											"end": 4671,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "JUMPDEST"
										},
										{
											"begin": 3420,
											"end": 3428,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3420,
											"end": 3428,
											"name": "SLOAD"
										},
										{
											"begin": 3420,
											"end": 3428,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3420,
											"end": 3428,
											"name": "AND"
										},
										{
											"begin": 3406,
											"end": 3416,
											"name": "CALLER"
										},
										{
											"begin": 3406,
											"end": 3428,
											"name": "EQ"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "JUMPI"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "DUP1"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "REVERT"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "JUMPDEST"
										},
										{
											"begin": 3473,
											"end": 3481,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3473,
											"end": 3481,
											"name": "SLOAD"
										},
										{
											"begin": 3473,
											"end": 3481,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "DUP1"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "SLOAD"
										},
										{
											"begin": 3445,
											"end": 3482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3482,
											"name": "MLOAD"
										},
										{
											"begin": 3473,
											"end": 3481,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3473,
											"end": 3481,
											"name": "SWAP4"
										},
										{
											"begin": 3473,
											"end": 3481,
											"name": "DUP5"
										},
										{
											"begin": 3473,
											"end": 3481,
											"name": "AND"
										},
										{
											"begin": 3473,
											"end": 3481,
											"name": "SWAP4"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "SWAP1"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "SWAP2"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "AND"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "SWAP2"
										},
										{
											"begin": 3445,
											"end": 3482,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3445,
											"end": 3482,
											"name": "SWAP2"
										},
										{
											"begin": 3445,
											"end": 3482,
											"name": "LOG3"
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "DUP1"
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "SLOAD"
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "DUP1"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "SLOAD"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "SWAP1"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "DUP2"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "AND"
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "DUP5"
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "AND"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "OR"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "SWAP1"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "SWAP2"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "SSTORE"
										},
										{
											"begin": 3520,
											"end": 3541,
											"name": "AND"
										},
										{
											"begin": 3520,
											"end": 3541,
											"name": "SWAP1"
										},
										{
											"begin": 3520,
											"end": 3541,
											"name": "SSTORE"
										},
										{
											"begin": 3353,
											"end": 3549,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "JUMPDEST"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "SLOAD"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "AND"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "DUP2"
										},
										{
											"begin": 2955,
											"end": 2975,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "JUMPDEST"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DUP1"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "SLOAD"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DUP1"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "MLOAD"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DUP5"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "AND"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "ISZERO"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "MUL"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "ADD"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "SWAP1"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "SWAP4"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "AND"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DUP5"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "SWAP1"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DIV"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DUP2"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "ADD"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DUP5"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "SWAP1"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DIV"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DUP5"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "MUL"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DUP3"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "ADD"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DUP5"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "ADD"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "SWAP1"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "SWAP3"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "MSTORE"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DUP2"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DUP2"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "MSTORE"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "SWAP3"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "SWAP2"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DUP4"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "ADD"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DUP3"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DUP3"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DUP1"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "ISZERO"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "JUMPI"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DUP1"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "LT"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "JUMPI"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DUP1"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DUP4"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "SLOAD"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DIV"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "MUL"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "DUP4"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "MSTORE"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "SWAP2"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "ADD"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "SWAP2"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "JUMP"
										},
										{
											"begin": 6292,
											"end": 6357,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 6292,
											"end": 6357,
											"name": "JUMPDEST"
										},
										{
											"begin": 6326,
											"end": 6349,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 6331,
											"end": 6341,
											"name": "CALLER"
										},
										{
											"begin": 6343,
											"end": 6348,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 6343,
											"end": 6348,
											"name": "SLOAD"
										},
										{
											"begin": 6326,
											"end": 6330,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 6326,
											"end": 6349,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6326,
											"end": 6349,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 6326,
											"end": 6349,
											"name": "JUMPDEST"
										},
										{
											"begin": 6326,
											"end": 6349,
											"name": "POP"
										},
										{
											"begin": 6292,
											"end": 6357,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "JUMPDEST"
										},
										{
											"begin": 4793,
											"end": 4803,
											"name": "CALLER"
										},
										{
											"begin": 4736,
											"end": 4748,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4784,
											"end": 4804,
											"name": "SWAP1"
										},
										{
											"begin": 4784,
											"end": 4804,
											"name": "DUP2"
										},
										{
											"begin": 4784,
											"end": 4804,
											"name": "MSTORE"
										},
										{
											"begin": 4784,
											"end": 4792,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4784,
											"end": 4804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4784,
											"end": 4804,
											"name": "MSTORE"
										},
										{
											"begin": 4784,
											"end": 4804,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4784,
											"end": 4804,
											"name": "DUP2"
										},
										{
											"begin": 4784,
											"end": 4804,
											"name": "KECCAK256"
										},
										{
											"begin": 4784,
											"end": 4804,
											"name": "SLOAD"
										},
										{
											"begin": 4784,
											"end": 4816,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 4784,
											"end": 4816,
											"name": "SWAP1"
										},
										{
											"begin": 4809,
											"end": 4815,
											"name": "DUP4"
										},
										{
											"begin": 4784,
											"end": 4816,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4784,
											"end": 4808,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 4784,
											"end": 4816,
											"name": "AND"
										},
										{
											"begin": 4784,
											"end": 4816,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4784,
											"end": 4816,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 4784,
											"end": 4816,
											"name": "JUMPDEST"
										},
										{
											"begin": 4770,
											"end": 4780,
											"name": "CALLER"
										},
										{
											"begin": 4761,
											"end": 4781,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4761,
											"end": 4781,
											"name": "SWAP1"
										},
										{
											"begin": 4761,
											"end": 4781,
											"name": "DUP2"
										},
										{
											"begin": 4761,
											"end": 4781,
											"name": "MSTORE"
										},
										{
											"begin": 4761,
											"end": 4769,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4761,
											"end": 4781,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4761,
											"end": 4781,
											"name": "MSTORE"
										},
										{
											"begin": 4761,
											"end": 4781,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4761,
											"end": 4781,
											"name": "DUP1"
										},
										{
											"begin": 4761,
											"end": 4781,
											"name": "DUP3"
										},
										{
											"begin": 4761,
											"end": 4781,
											"name": "KECCAK256"
										},
										{
											"begin": 4761,
											"end": 4816,
											"name": "SWAP3"
										},
										{
											"begin": 4761,
											"end": 4816,
											"name": "SWAP1"
										},
										{
											"begin": 4761,
											"end": 4816,
											"name": "SWAP3"
										},
										{
											"begin": 4761,
											"end": 4816,
											"name": "SSTORE"
										},
										{
											"begin": 4761,
											"end": 4781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4842,
											"end": 4854,
											"name": "DUP6"
										},
										{
											"begin": 4842,
											"end": 4854,
											"name": "AND"
										},
										{
											"begin": 4842,
											"end": 4854,
											"name": "DUP2"
										},
										{
											"begin": 4842,
											"end": 4854,
											"name": "MSTORE"
										},
										{
											"begin": 4842,
											"end": 4854,
											"name": "KECCAK256"
										},
										{
											"begin": 4842,
											"end": 4854,
											"name": "SLOAD"
										},
										{
											"begin": 4842,
											"end": 4866,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 4842,
											"end": 4866,
											"name": "SWAP1"
										},
										{
											"begin": 4859,
											"end": 4865,
											"name": "DUP4"
										},
										{
											"begin": 4842,
											"end": 4866,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4842,
											"end": 4858,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 4842,
											"end": 4866,
											"name": "AND"
										},
										{
											"begin": 4842,
											"end": 4866,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4842,
											"end": 4866,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 4842,
											"end": 4866,
											"name": "JUMPDEST"
										},
										{
											"begin": 4827,
											"end": 4839,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4827,
											"end": 4839,
											"name": "DUP5"
										},
										{
											"begin": 4827,
											"end": 4839,
											"name": "AND"
										},
										{
											"begin": 4827,
											"end": 4839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4827,
											"end": 4839,
											"name": "DUP2"
										},
										{
											"begin": 4827,
											"end": 4839,
											"name": "DUP2"
										},
										{
											"begin": 4827,
											"end": 4839,
											"name": "MSTORE"
										},
										{
											"begin": 4827,
											"end": 4835,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4827,
											"end": 4839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4827,
											"end": 4839,
											"name": "SWAP1"
										},
										{
											"begin": 4827,
											"end": 4839,
											"name": "DUP2"
										},
										{
											"begin": 4827,
											"end": 4839,
											"name": "MSTORE"
										},
										{
											"begin": 4827,
											"end": 4839,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4827,
											"end": 4839,
											"name": "SWAP2"
										},
										{
											"begin": 4827,
											"end": 4839,
											"name": "DUP3"
										},
										{
											"begin": 4827,
											"end": 4839,
											"name": "SWAP1"
										},
										{
											"begin": 4827,
											"end": 4839,
											"name": "KECCAK256"
										},
										{
											"begin": 4827,
											"end": 4866,
											"name": "SWAP4"
										},
										{
											"begin": 4827,
											"end": 4866,
											"name": "SWAP1"
										},
										{
											"begin": 4827,
											"end": 4866,
											"name": "SWAP4"
										},
										{
											"begin": 4827,
											"end": 4866,
											"name": "SSTORE"
										},
										{
											"begin": 4882,
											"end": 4914,
											"name": "DUP1"
										},
										{
											"begin": 4882,
											"end": 4914,
											"name": "MLOAD"
										},
										{
											"begin": 4882,
											"end": 4914,
											"name": "DUP6"
										},
										{
											"begin": 4882,
											"end": 4914,
											"name": "DUP2"
										},
										{
											"begin": 4882,
											"end": 4914,
											"name": "MSTORE"
										},
										{
											"begin": 4882,
											"end": 4914,
											"name": "SWAP1"
										},
										{
											"begin": 4882,
											"end": 4914,
											"name": "MLOAD"
										},
										{
											"begin": 4827,
											"end": 4839,
											"name": "SWAP2"
										},
										{
											"begin": 4827,
											"end": 4839,
											"name": "SWAP3"
										},
										{
											"begin": 4891,
											"end": 4901,
											"name": "CALLER"
										},
										{
											"begin": 4891,
											"end": 4901,
											"name": "SWAP3"
										},
										{
											"begin": 4882,
											"end": 4914,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4882,
											"end": 4914,
											"name": "SWAP3"
										},
										{
											"begin": 4882,
											"end": 4914,
											"name": "DUP2"
										},
										{
											"begin": 4882,
											"end": 4914,
											"name": "SWAP1"
										},
										{
											"begin": 4882,
											"end": 4914,
											"name": "SUB"
										},
										{
											"begin": 4882,
											"end": 4914,
											"name": "SWAP1"
										},
										{
											"begin": 4882,
											"end": 4914,
											"name": "SWAP2"
										},
										{
											"begin": 4882,
											"end": 4914,
											"name": "ADD"
										},
										{
											"begin": 4882,
											"end": 4914,
											"name": "SWAP1"
										},
										{
											"begin": 4882,
											"end": 4914,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4932,
											"end": 4936,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "SWAP3"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "SWAP2"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "POP"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "POP"
										},
										{
											"begin": 4677,
											"end": 4944,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "JUMPDEST"
										},
										{
											"begin": 5788,
											"end": 5798,
											"name": "CALLER"
										},
										{
											"begin": 5755,
											"end": 5767,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5799,
											"name": "DUP2"
										},
										{
											"begin": 5780,
											"end": 5799,
											"name": "DUP2"
										},
										{
											"begin": 5780,
											"end": 5799,
											"name": "MSTORE"
										},
										{
											"begin": 5780,
											"end": 5787,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5780,
											"end": 5799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5780,
											"end": 5799,
											"name": "SWAP1"
										},
										{
											"begin": 5780,
											"end": 5799,
											"name": "DUP2"
										},
										{
											"begin": 5780,
											"end": 5799,
											"name": "MSTORE"
										},
										{
											"begin": 5780,
											"end": 5799,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5799,
											"name": "DUP1"
										},
										{
											"begin": 5780,
											"end": 5799,
											"name": "DUP4"
										},
										{
											"begin": 5780,
											"end": 5799,
											"name": "KECCAK256"
										},
										{
											"begin": 5780,
											"end": 5799,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5780,
											"end": 5808,
											"name": "DUP9"
										},
										{
											"begin": 5780,
											"end": 5808,
											"name": "AND"
										},
										{
											"begin": 5780,
											"end": 5808,
											"name": "DUP1"
										},
										{
											"begin": 5780,
											"end": 5808,
											"name": "DUP6"
										},
										{
											"begin": 5780,
											"end": 5808,
											"name": "MSTORE"
										},
										{
											"begin": 5780,
											"end": 5808,
											"name": "SWAP1"
										},
										{
											"begin": 5780,
											"end": 5808,
											"name": "DUP4"
										},
										{
											"begin": 5780,
											"end": 5808,
											"name": "MSTORE"
										},
										{
											"begin": 5780,
											"end": 5808,
											"name": "DUP2"
										},
										{
											"begin": 5780,
											"end": 5808,
											"name": "DUP5"
										},
										{
											"begin": 5780,
											"end": 5808,
											"name": "KECCAK256"
										},
										{
											"begin": 5780,
											"end": 5817,
											"name": "DUP8"
										},
										{
											"begin": 5780,
											"end": 5817,
											"name": "SWAP1"
										},
										{
											"begin": 5780,
											"end": 5817,
											"name": "SSTORE"
										},
										{
											"begin": 5833,
											"end": 5870,
											"name": "DUP2"
										},
										{
											"begin": 5833,
											"end": 5870,
											"name": "MLOAD"
										},
										{
											"begin": 5833,
											"end": 5870,
											"name": "DUP8"
										},
										{
											"begin": 5833,
											"end": 5870,
											"name": "DUP2"
										},
										{
											"begin": 5833,
											"end": 5870,
											"name": "MSTORE"
										},
										{
											"begin": 5833,
											"end": 5870,
											"name": "SWAP2"
										},
										{
											"begin": 5833,
											"end": 5870,
											"name": "MLOAD"
										},
										{
											"begin": 5755,
											"end": 5767,
											"name": "SWAP4"
										},
										{
											"begin": 5755,
											"end": 5767,
											"name": "SWAP5"
										},
										{
											"begin": 5780,
											"end": 5808,
											"name": "SWAP1"
										},
										{
											"begin": 5780,
											"end": 5808,
											"name": "SWAP4"
										},
										{
											"begin": 5788,
											"end": 5798,
											"name": "SWAP1"
										},
										{
											"begin": 5788,
											"end": 5798,
											"name": "SWAP3"
										},
										{
											"begin": 5833,
											"end": 5870,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5833,
											"end": 5870,
											"name": "SWAP3"
										},
										{
											"begin": 5833,
											"end": 5870,
											"name": "DUP3"
										},
										{
											"begin": 5833,
											"end": 5870,
											"name": "SWAP1"
										},
										{
											"begin": 5833,
											"end": 5870,
											"name": "SUB"
										},
										{
											"begin": 5833,
											"end": 5870,
											"name": "ADD"
										},
										{
											"begin": 5833,
											"end": 5870,
											"name": "SWAP1"
										},
										{
											"begin": 5833,
											"end": 5870,
											"name": "LOG3"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "MLOAD"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "PUSH",
											"value": "8F4FFCB100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP2"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "MSTORE"
										},
										{
											"begin": 5929,
											"end": 5939,
											"name": "CALLER"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP3"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "ADD"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP2"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP2"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "MSTORE"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP4"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "ADD"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP7"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "SWAP1"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "MSTORE"
										},
										{
											"begin": 5957,
											"end": 5961,
											"name": "ADDRESS"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP5"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "ADD"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP2"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "SWAP1"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "MSTORE"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP6"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "ADD"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "SWAP1"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP2"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "MSTORE"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP7"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "MLOAD"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP7"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "ADD"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "MSTORE"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP7"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "MLOAD"
										},
										{
											"begin": 5881,
											"end": 5928,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5881,
											"end": 5928,
											"name": "DUP11"
										},
										{
											"begin": 5881,
											"end": 5928,
											"name": "AND"
										},
										{
											"begin": 5881,
											"end": 5928,
											"name": "SWAP6"
										},
										{
											"begin": 5881,
											"end": 5928,
											"name": "PUSH",
											"value": "8F4FFCB1"
										},
										{
											"begin": 5881,
											"end": 5928,
											"name": "SWAP6"
										},
										{
											"begin": 5929,
											"end": 5939,
											"name": "SWAP5"
										},
										{
											"begin": 5941,
											"end": 5947,
											"name": "DUP11"
										},
										{
											"begin": 5941,
											"end": 5947,
											"name": "SWAP5"
										},
										{
											"begin": 5957,
											"end": 5961,
											"name": "SWAP4"
										},
										{
											"begin": 5964,
											"end": 5968,
											"name": "DUP11"
										},
										{
											"begin": 5964,
											"end": 5968,
											"name": "SWAP4"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "SWAP2"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "SWAP3"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "SWAP1"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "SWAP2"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "PUSH",
											"value": "A4"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "SWAP1"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "SWAP2"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "ADD"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "SWAP1"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP6"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "ADD"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "SWAP1"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP1"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP4"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "POP"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "POP"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "POP"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "SWAP1"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "POP"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "SWAP1"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP2"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "ADD"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "SWAP1"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "AND"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP1"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "ISZERO"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "JUMPI"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP1"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP3"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "SUB"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP1"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "MLOAD"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP4"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "SUB"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "EXP"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "SUB"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "NOT"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "AND"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP2"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "MSTORE"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "ADD"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "SWAP2"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "POP"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "JUMPDEST"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "POP"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "SWAP6"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "POP"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "POP"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "POP"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "POP"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "POP"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "POP"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "MLOAD"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP1"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP4"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "SUB"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP2"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP8"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "DUP1"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "POP"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "GAS"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "CALL"
										},
										{
											"begin": 5881,
											"end": 5969,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5987,
											"end": 5991,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5987,
											"end": 5991,
											"name": "SWAP8"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5666,
											"end": 5999,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "JUMPDEST"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "SLOAD"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "AND"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "DUP2"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "JUMPDEST"
										},
										{
											"begin": 6620,
											"end": 6632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP1"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "SLOAD"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "AND"
										},
										{
											"begin": 3197,
											"end": 3207,
											"name": "CALLER"
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "EQ"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "JUMPI"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "DUP1"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "REVERT"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "JUMPDEST"
										},
										{
											"begin": 6690,
											"end": 6695,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6690,
											"end": 6695,
											"name": "DUP1"
										},
										{
											"begin": 6690,
											"end": 6695,
											"name": "SLOAD"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "DUP1"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "MLOAD"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "PUSH",
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "DUP2"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "MSTORE"
										},
										{
											"begin": 6652,
											"end": 6689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6690,
											"end": 6695,
											"name": "SWAP3"
										},
										{
											"begin": 6690,
											"end": 6695,
											"name": "DUP4"
										},
										{
											"begin": 6690,
											"end": 6695,
											"name": "AND"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "DUP3"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "ADD"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "MSTORE"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "DUP2"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "ADD"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "DUP7"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "SWAP1"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "MSTORE"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "SWAP1"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "MLOAD"
										},
										{
											"begin": 6652,
											"end": 6689,
											"name": "SWAP2"
										},
										{
											"begin": 6652,
											"end": 6689,
											"name": "DUP7"
										},
										{
											"begin": 6652,
											"end": 6689,
											"name": "AND"
										},
										{
											"begin": 6652,
											"end": 6689,
											"name": "SWAP3"
										},
										{
											"begin": 6652,
											"end": 6689,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 6652,
											"end": 6689,
											"name": "SWAP3"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "DUP1"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "DUP5"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "ADD"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "SWAP4"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "SWAP4"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "SWAP1"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "DUP4"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "SWAP1"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "SUB"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "SWAP1"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "SWAP2"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "ADD"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "SWAP1"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "DUP3"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "SWAP1"
										},
										{
											"begin": 6652,
											"end": 6689,
											"name": "DUP8"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "DUP1"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "POP"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "GAS"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "CALL"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "POP"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "POP"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "POP"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "POP"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "MLOAD"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "MLOAD"
										},
										{
											"begin": 6652,
											"end": 6704,
											"name": "SWAP4"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6528,
											"end": 6712,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "JUMPDEST"
										},
										{
											"begin": 5624,
											"end": 5643,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5624,
											"end": 5643,
											"name": "SWAP2"
										},
										{
											"begin": 5624,
											"end": 5643,
											"name": "DUP3"
										},
										{
											"begin": 5624,
											"end": 5643,
											"name": "AND"
										},
										{
											"begin": 5590,
											"end": 5604,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5624,
											"end": 5643,
											"name": "SWAP1"
										},
										{
											"begin": 5624,
											"end": 5643,
											"name": "DUP2"
										},
										{
											"begin": 5624,
											"end": 5643,
											"name": "MSTORE"
										},
										{
											"begin": 5624,
											"end": 5631,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5624,
											"end": 5643,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5624,
											"end": 5643,
											"name": "SWAP1"
										},
										{
											"begin": 5624,
											"end": 5643,
											"name": "DUP2"
										},
										{
											"begin": 5624,
											"end": 5643,
											"name": "MSTORE"
										},
										{
											"begin": 5624,
											"end": 5643,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5624,
											"end": 5643,
											"name": "DUP1"
										},
										{
											"begin": 5624,
											"end": 5643,
											"name": "DUP4"
										},
										{
											"begin": 5624,
											"end": 5643,
											"name": "KECCAK256"
										},
										{
											"begin": 5624,
											"end": 5652,
											"name": "SWAP4"
										},
										{
											"begin": 5624,
											"end": 5652,
											"name": "SWAP1"
										},
										{
											"begin": 5624,
											"end": 5652,
											"name": "SWAP5"
										},
										{
											"begin": 5624,
											"end": 5652,
											"name": "AND"
										},
										{
											"begin": 5624,
											"end": 5652,
											"name": "DUP3"
										},
										{
											"begin": 5624,
											"end": 5652,
											"name": "MSTORE"
										},
										{
											"begin": 5624,
											"end": 5652,
											"name": "SWAP2"
										},
										{
											"begin": 5624,
											"end": 5652,
											"name": "SWAP1"
										},
										{
											"begin": 5624,
											"end": 5652,
											"name": "SWAP2"
										},
										{
											"begin": 5624,
											"end": 5652,
											"name": "MSTORE"
										},
										{
											"begin": 5624,
											"end": 5652,
											"name": "KECCAK256"
										},
										{
											"begin": 5624,
											"end": 5652,
											"name": "SLOAD"
										},
										{
											"begin": 5624,
											"end": 5652,
											"name": "SWAP1"
										},
										{
											"begin": 5513,
											"end": 5660,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "JUMPDEST"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "SLOAD"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "AND"
										},
										{
											"begin": 3197,
											"end": 3207,
											"name": "CALLER"
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "EQ"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "JUMPI"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "DUP1"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "REVERT"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 3189,
											"end": 3217,
											"name": "JUMPDEST"
										},
										{
											"begin": 3319,
											"end": 3327,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "DUP1"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SLOAD"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "AND"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SWAP3"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SWAP1"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SWAP3"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "AND"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SWAP2"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SWAP1"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SWAP2"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "OR"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SWAP1"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SSTORE"
										},
										{
											"begin": 3245,
											"end": 3347,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 919,
											"end": 1033,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 919,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 994,
											"end": 999,
											"name": "DUP2"
										},
										{
											"begin": 994,
											"end": 999,
											"name": "DUP2"
										},
										{
											"begin": 994,
											"end": 999,
											"name": "ADD"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "DUP3"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "DUP2"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "LT"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "ISZERO"
										},
										{
											"begin": 1010,
											"end": 1025,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 1010,
											"end": 1025,
											"name": "JUMPI"
										},
										{
											"begin": 1010,
											"end": 1025,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1025,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1025,
											"name": "REVERT"
										},
										{
											"begin": 1039,
											"end": 1153,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 1039,
											"end": 1153,
											"name": "JUMPDEST"
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1124,
											"name": "DUP3"
										},
										{
											"begin": 1118,
											"end": 1124,
											"name": "DUP3"
										},
										{
											"begin": 1118,
											"end": 1124,
											"name": "GT"
										},
										{
											"begin": 1118,
											"end": 1124,
											"name": "ISZERO"
										},
										{
											"begin": 1110,
											"end": 1125,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 1110,
											"end": 1125,
											"name": "JUMPI"
										},
										{
											"begin": 1110,
											"end": 1125,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1125,
											"name": "DUP1"
										},
										{
											"begin": 1110,
											"end": 1125,
											"name": "REVERT"
										},
										{
											"begin": 1110,
											"end": 1125,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 1110,
											"end": 1125,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "SWAP1"
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "SUB"
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "SWAP1"
										},
										{
											"begin": 1039,
											"end": 1153,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"drip()": "9f678cca",
							"name()": "06fdde03",
							"newOwner()": "d4ee1d90",
							"owner()": "8da5cb5b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAnyERC20Token(address,uint256)": "dc39d06d",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"drip\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"source/WeenusToken.sol\":\"WeenusToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/WeenusToken.sol\":{\"keccak256\":\"0x153aeb34a4c211a69dddaa7290da788297be4e2b43517d33d5539c4516c7863c\",\"urls\":[\"bzzr://536b5969afd57163756b828dce4a50e22e6acda5b588a41335029c13c2a65965\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"source/WeenusToken.sol": {
				"ast": {
					"absolutePath": "source/WeenusToken.sol",
					"exportedSymbols": {
						"ApproveAndCallFallBack": [
							175
						],
						"ERC20Interface": [
							163
						],
						"Owned": [
							244
						],
						"SafeMath": [
							96
						],
						"WeenusToken": [
							631
						]
					},
					"id": 632,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "71:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 96,
							"linearizedBaseContracts": [
								96
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "979:54:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 10,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "990:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 11,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "994:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 12,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "998:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "994:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "990:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "990:9:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 17,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "1018:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 18,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "1023:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1018:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 16,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															649,
															650
														],
														"referencedDeclaration": 649,
														"src": "1010:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "1010:15:0"
											}
										]
									},
									"documentation": null,
									"id": 23,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "932:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "932:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "940:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "940:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "931:16:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "971:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "971:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "970:8:0"
									},
									"scope": 96,
									"src": "919:114:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1099:54:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 33,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "1118:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 34,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "1123:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1118:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															649,
															650
														],
														"referencedDeclaration": 649,
														"src": "1110:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1110:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "1110:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 38,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "1136:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 39,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "1140:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"id": 40,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1144:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1140:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1136:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1136:9:0"
											}
										]
									},
									"documentation": null,
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1052:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1052:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1060:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1060:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1051:16:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1091:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1091:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1090:8:0"
									},
									"scope": 96,
									"src": "1039:114:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "1219:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 54,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "1230:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 55,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "1234:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"id": 56,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "1238:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1234:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1230:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "1230:9:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 61,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "1258:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 62,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1263:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1258:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 66,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 64,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 52,
																		"src": "1268:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 65,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 47,
																		"src": "1272:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1268:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 67,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "1277:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1268:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1258:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 60,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															649,
															650
														],
														"referencedDeclaration": 649,
														"src": "1250:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1250:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "1250:29:0"
											}
										]
									},
									"documentation": null,
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1172:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1172:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1180:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1180:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1171:16:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1211:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1211:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1210:8:0"
									},
									"scope": 96,
									"src": "1159:128:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "1353:53:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 83,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1372:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1376:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1372:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 82,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															649,
															650
														],
														"referencedDeclaration": 649,
														"src": "1364:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1364:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1364:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 88,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "1389:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 89,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "1393:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 90,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1397:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1393:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1389:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1389:9:0"
											}
										]
									},
									"documentation": null,
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1306:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1306:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1314:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1314:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1305:16:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1345:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1345:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1344:8:0"
									},
									"scope": 96,
									"src": "1293:113:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 632,
							"src": "895:514:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 163,
							"linearizedBaseContracts": [
								163
							],
							"name": "ERC20Interface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1729:2:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1753:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1753:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1752:6:0"
									},
									"scope": 163,
									"src": "1709:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"name": "tokenOwner",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1784:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1783:20:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1825:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1825:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1824:14:0"
									},
									"scope": 163,
									"src": "1765:74:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"name": "tokenOwner",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "1864:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1864:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "1884:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1863:37:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "1922:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1922:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1921:16:0"
									},
									"scope": 163,
									"src": "1845:93:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1962:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1974:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1974:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1961:25:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2003:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 123,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2003:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2002:14:0"
									},
									"scope": 163,
									"src": "1944:73:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2040:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2040:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2057:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2057:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2039:30:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2086:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 132,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2086:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2085:14:0"
									},
									"scope": 163,
									"src": "2023:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2128:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2142:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2142:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2154:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2127:39:0"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2183:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 143,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2182:14:0"
									},
									"scope": 163,
									"src": "2106:91:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 154,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2220:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2220:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2242:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"indexed": false,
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2262:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2262:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2219:55:0"
									},
									"src": "2205:70:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 162,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"indexed": true,
												"name": "tokenOwner",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2296:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2296:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2324:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"indexed": false,
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2349:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2349:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2295:66:0"
									},
									"src": "2281:81:0"
								}
							],
							"scope": 632,
							"src": "1678:687:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 175,
							"linearizedBaseContracts": [
								175
							],
							"name": "ApproveAndCallFallBack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "receiveApproval",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2672:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2672:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2686:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2702:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2717:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 170,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2717:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2671:64:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2742:0:0"
									},
									"scope": 175,
									"src": "2647:96:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 632,
							"src": "2608:138:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 244,
							"linearizedBaseContracts": [
								244
							],
							"name": "Owned",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 177,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 244,
									"src": "2955:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 176,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2955:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 179,
									"name": "newOwner",
									"nodeType": "VariableDeclaration",
									"scope": 244,
									"src": "2982:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 178,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2982:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 185,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "3041:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": true,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "3064:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3064:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3040:44:0"
									},
									"src": "3014:71:0"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "3114:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 188,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "3125:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 189,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "3133:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3133:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3125:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "3125:18:0"
											}
										]
									},
									"documentation": null,
									"id": 194,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3104:2:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3114:0:0"
									},
									"scope": 244,
									"src": "3093:58:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3178:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 197,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "3197:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3197:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 199,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "3211:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3197:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 196,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															649,
															650
														],
														"referencedDeclaration": 649,
														"src": "3189:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3189:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "3189:28:0"
											},
											{
												"id": 203,
												"nodeType": "PlaceholderStatement",
												"src": "3228:1:0"
											}
										]
									},
									"documentation": null,
									"id": 205,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3178:0:0"
									},
									"src": "3159:78:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "3308:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 212,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "3319:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 213,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "3330:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3319:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "3319:20:0"
											}
										]
									},
									"documentation": null,
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 210,
											"modifierName": {
												"argumentTypes": null,
												"id": 209,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 205,
												"src": "3298:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3298:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"name": "_newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "3272:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3272:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3271:19:0"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3308:0:0"
									},
									"scope": 244,
									"src": "3245:102:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "3387:162:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 221,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "3406:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3406:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 223,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "3420:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3406:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															649,
															650
														],
														"referencedDeclaration": 649,
														"src": "3398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3398:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "3398:31:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 228,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3466:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 229,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3473:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 227,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "3445:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3445:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 231,
												"nodeType": "EmitStatement",
												"src": "3440:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 232,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "3493:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 233,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "3501:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3493:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "3493:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 236,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "3520:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3539:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3531:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3531:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3520:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "3520:21:0"
											}
										]
									},
									"documentation": null,
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3377:2:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3387:0:0"
									},
									"scope": 244,
									"src": "3353:196:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 632,
							"src": "2933:619:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 245,
										"name": "ERC20Interface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 163,
										"src": "3831:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Interface_$163",
											"typeString": "contract ERC20Interface"
										}
									},
									"id": 246,
									"nodeType": "InheritanceSpecifier",
									"src": "3831:14:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 247,
										"name": "Owned",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 244,
										"src": "3847:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Owned_$244",
											"typeString": "contract Owned"
										}
									},
									"id": 248,
									"nodeType": "InheritanceSpecifier",
									"src": "3847:5:0"
								}
							],
							"contractDependencies": [
								163,
								244
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 631,
							"linearizedBaseContracts": [
								631,
								244,
								163
							],
							"name": "WeenusToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 251,
									"libraryName": {
										"contractScope": null,
										"id": 249,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 96,
										"src": "3866:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$96",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "3860:24:0",
									"typeName": {
										"id": 250,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "3879:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 253,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 631,
									"src": "3892:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 252,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3892:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 255,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 631,
									"src": "3919:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 254,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3919:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 257,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 631,
									"src": "3945:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 256,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3945:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 259,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 631,
									"src": "3973:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 258,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "3973:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 261,
									"name": "_drop",
									"nodeType": "VariableDeclaration",
									"scope": 631,
									"src": "3997:10:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 260,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "3997:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 265,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 631,
									"src": "4016:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 264,
										"keyType": {
											"id": 262,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4024:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4016:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 263,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4035:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 271,
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 631,
									"src": "4056:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 270,
										"keyType": {
											"id": 266,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4064:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4056:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 269,
											"keyType": {
												"id": 267,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4083:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4075:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 268,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4094:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "4138:287:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 274,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "4149:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "5745454e5553",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4158:8:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_a39f1a90f4dec43055262f303fed76b105319f6b5c37211769387e8097aed3dc",
															"typeString": "literal_string \"WEENUS\""
														},
														"value": "WEENUS"
													},
													"src": "4149:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4149:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 278,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "4177:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "5765656e757320f09f92aa",
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4184:13:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_e49db6f6e80c899ac776b0af8aa01e3f192ece63278bcf8372dfc16243b2e87e",
															"typeString": "literal_string \"Weenus ðŸ’ª\""
														},
														"value": "Weenus ðŸ’ª"
													},
													"src": "4177:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "4177:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 282,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4208:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4219:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "4208:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "4208:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 286,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "4232:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "31303030303030",
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4247:7:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															},
															"value": "1000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4257:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 290,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "4266:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4261:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": "uint"
																},
																"id": 291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4261:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4257:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4247:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4232:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "4232:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 296,
														"name": "_drop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "4286:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "31303030",
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4294:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4301:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 300,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "4310:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4305:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": "uint"
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4305:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4301:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4294:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4286:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "4286:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 306,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4330:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 308,
														"indexExpression": {
															"argumentTypes": null,
															"id": 307,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "4339:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4330:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 309,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "4348:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4330:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "4330:30:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4393:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4385:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4385:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 316,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "4397:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 317,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "4404:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 312,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "4376:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4376:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "EmitStatement",
												"src": "4371:46:0"
											}
										]
									},
									"documentation": null,
									"id": 321,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4128:2:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4138:0:0"
									},
									"scope": 631,
									"src": "4117:308:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "4481:64:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 328,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "4516:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 332,
															"indexExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4533:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4525:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4525:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4516:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 326,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "4499:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 45,
														"src": "4499:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4499:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 325,
												"id": 334,
												"nodeType": "Return",
												"src": "4492:45:0"
											}
										]
									},
									"documentation": null,
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4451:2:0"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "4475:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4475:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4474:6:0"
									},
									"scope": 631,
									"src": "4431:114:0",
									"stateMutability": "view",
									"superFunction": 101,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "4625:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 343,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "4643:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 345,
													"indexExpression": {
														"argumentTypes": null,
														"id": 344,
														"name": "tokenOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "4652:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4643:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "4636:27:0"
											}
										]
									},
									"documentation": null,
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"name": "tokenOwner",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4570:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4569:20:0"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4611:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4611:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4610:14:0"
									},
									"scope": 631,
									"src": "4551:120:0",
									"stateMutability": "view",
									"superFunction": 108,
									"visibility": "public"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "4750:194:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 357,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4761:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 360,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 358,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "4770:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4770:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4761:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 366,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "4809:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 361,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "4784:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 364,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 362,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 646,
																		"src": "4793:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4793:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4784:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 45,
															"src": "4784:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4784:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4761:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "4761:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 370,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4827:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 372,
														"indexExpression": {
															"argumentTypes": null,
															"id": 371,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "4836:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4827:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 377,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "4859:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 373,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "4842:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 375,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 374,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "4851:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4842:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 23,
															"src": "4842:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4842:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4827:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "4827:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 382,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "4891:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4891:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 384,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "4903:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 385,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "4907:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 381,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "4882:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4882:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "EmitStatement",
												"src": "4877:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4932:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 356,
												"id": 389,
												"nodeType": "Return",
												"src": "4925:11:0"
											}
										]
									},
									"documentation": null,
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "4695:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "4707:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4707:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4694:25:0"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "4736:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 354,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4736:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4735:14:0"
									},
									"scope": 631,
									"src": "4677:267:0",
									"stateMutability": "nonpayable",
									"superFunction": 126,
									"visibility": "public"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "5027:131:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 400,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "5038:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 404,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 401,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "5046:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5046:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5038:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 405,
														"indexExpression": {
															"argumentTypes": null,
															"id": 403,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "5058:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5038:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 406,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "5069:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5038:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "5038:37:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 410,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "5100:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5100:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 412,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "5112:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 413,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "5121:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 409,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "5091:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 415,
												"nodeType": "EmitStatement",
												"src": "5086:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5146:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 399,
												"id": 417,
												"nodeType": "Return",
												"src": "5139:11:0"
											}
										]
									},
									"documentation": null,
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "4967:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "4984:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4984:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4966:30:0"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "5013:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5013:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5012:14:0"
									},
									"scope": 631,
									"src": "4950:208:0",
									"stateMutability": "nonpayable",
									"superFunction": 135,
									"visibility": "public"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "5255:252:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 430,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "5266:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 432,
														"indexExpression": {
															"argumentTypes": null,
															"id": 431,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "5275:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5266:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 437,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "5302:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 433,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "5283:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 435,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 434,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "5292:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5283:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 45,
															"src": "5283:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5283:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5266:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "5266:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 441,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "5320:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 445,
															"indexExpression": {
																"argumentTypes": null,
																"id": 442,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "5328:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5320:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 446,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 443,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "5334:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5334:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5320:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 454,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "5378:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 447,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "5348:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 449,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 448,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "5356:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5348:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 452,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 450,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 646,
																		"src": "5362:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5362:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5348:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 45,
															"src": "5348:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5348:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5320:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "5320:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 458,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "5396:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 460,
														"indexExpression": {
															"argumentTypes": null,
															"id": 459,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "5405:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5396:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 465,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "5428:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 461,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "5411:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 463,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 462,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "5420:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5411:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 23,
															"src": "5411:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5411:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5396:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "5396:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 470,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "5460:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 471,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "5466:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 472,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "5470:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 469,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "5451:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5451:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "EmitStatement",
												"src": "5446:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5495:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 429,
												"id": 476,
												"nodeType": "Return",
												"src": "5488:11:0"
											}
										]
									},
									"documentation": null,
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "5186:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5186:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "5200:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "5212:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5212:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5185:39:0"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "5241:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 427,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5241:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5240:14:0"
									},
									"scope": 631,
									"src": "5164:343:0",
									"stateMutability": "nonpayable",
									"superFunction": 146,
									"visibility": "public"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "5606:54:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 487,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "5624:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 489,
														"indexExpression": {
															"argumentTypes": null,
															"id": 488,
															"name": "tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "5632:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5624:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 491,
													"indexExpression": {
														"argumentTypes": null,
														"id": 490,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "5644:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5624:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 486,
												"id": 492,
												"nodeType": "Return",
												"src": "5617:35:0"
											}
										]
									},
									"documentation": null,
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"name": "tokenOwner",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "5532:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "5552:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5552:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5531:37:0"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "5590:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5590:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5589:16:0"
									},
									"scope": 631,
									"src": "5513:147:0",
									"stateMutability": "view",
									"superFunction": 117,
									"visibility": "public"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "5769:230:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 505,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "5780:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 509,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 506,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "5788:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5788:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5780:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 510,
														"indexExpression": {
															"argumentTypes": null,
															"id": 508,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "5800:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5780:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 511,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "5811:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5780:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "5780:37:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 515,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "5842:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5842:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 517,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "5854:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 518,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "5863:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "5833:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5833:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "EmitStatement",
												"src": "5828:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 525,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "5929:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5929:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 527,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "5941:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 529,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "5957:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_WeenusToken_$631",
																		"typeString": "contract WeenusToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_WeenusToken_$631",
																		"typeString": "contract WeenusToken"
																	}
																],
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5949:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5949:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 531,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "5964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 522,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 496,
																	"src": "5904:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 521,
																"name": "ApproveAndCallFallBack",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "5881:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ApproveAndCallFallBack_$175_$",
																	"typeString": "type(contract ApproveAndCallFallBack)"
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5881:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ApproveAndCallFallBack_$175",
																"typeString": "contract ApproveAndCallFallBack"
															}
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "receiveApproval",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 174,
														"src": "5881:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,address,bytes memory) external"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5881:88:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "5881:88:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5987:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 504,
												"id": 535,
												"nodeType": "Return",
												"src": "5980:11:0"
											}
										]
									},
									"documentation": null,
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "5690:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "5707:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5707:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "5720:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 499,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5720:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5689:49:0"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "5755:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 502,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5755:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5754:14:0"
									},
									"scope": 631,
									"src": "5666:333:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "6084:202:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 546,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "6095:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 548,
														"indexExpression": {
															"argumentTypes": null,
															"id": 547,
															"name": "tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "6104:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6095:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 553,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "6143:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 549,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "6118:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 551,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 550,
																	"name": "tokenOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "6127:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6118:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 23,
															"src": "6118:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6118:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6095:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "6095:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 557,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "6161:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 560,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "6193:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 558,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "6176:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 23,
															"src": "6176:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6176:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6161:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "6161:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6233:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6225:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6225:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 568,
															"name": "tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "6237:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 569,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "6249:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 564,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "6216:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6216:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "EmitStatement",
												"src": "6211:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6274:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 545,
												"id": 573,
												"nodeType": "Return",
												"src": "6267:11:0"
											}
										]
									},
									"documentation": null,
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"name": "tokenOwner",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "6019:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "6039:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6039:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6018:33:0"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "6070:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 543,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6070:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6069:14:0"
									},
									"scope": 631,
									"src": "6005:281:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "6315:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 579,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "6331:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6331:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 581,
															"name": "_drop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6343:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 578,
														"name": "mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "6326:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6326:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "6326:23:0"
											}
										]
									},
									"documentation": null,
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "drip",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6305:2:0"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6315:0:0"
									},
									"scope": 631,
									"src": "6292:65:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "6394:128:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 589,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "6410:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6410:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 591,
															"name": "_drop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6422:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 588,
														"name": "mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "6405:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6405:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "6405:23:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 594,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "6443:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6443:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6455:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6443:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 608,
												"nodeType": "IfStatement",
												"src": "6439:76:0",
												"trueBody": {
													"id": 607,
													"nodeType": "Block",
													"src": "6458:57:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 603,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 646,
																			"src": "6493:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "6493:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 598,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 646,
																			"src": "6473:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "6473:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "6473:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6473:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 606,
															"nodeType": "ExpressionStatement",
															"src": "6473:30:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 610,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6374:2:0"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6394:0:0"
									},
									"scope": 631,
									"src": "6365:157:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "6634:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 625,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "6690:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 626,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "6697:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 622,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "6667:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 621,
																"name": "ERC20Interface",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "6652:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20Interface_$163_$",
																	"typeString": "type(contract ERC20Interface)"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6652:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20Interface_$163",
																"typeString": "contract ERC20Interface"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 126,
														"src": "6652:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6652:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 620,
												"id": 628,
												"nodeType": "Return",
												"src": "6645:59:0"
											}
										]
									},
									"documentation": null,
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 617,
											"modifierName": {
												"argumentTypes": null,
												"id": 616,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 205,
												"src": "6601:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6601:9:0"
										}
									],
									"name": "transferAnyERC20Token",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"name": "tokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "6559:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6559:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "6581:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6581:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6558:35:0"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "6620:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 618,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6620:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6619:14:0"
									},
									"scope": 631,
									"src": "6528:184:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 632,
							"src": "3807:2908:0"
						}
					],
					"src": "71:6644:0"
				},
				"id": 0
			}
		}
	}
}